   1               		.file	"CDC.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CDC_Device_Event_Stub,"ax",@progbits
  11               	.global	CDC_Device_Event_Stub
  13               	CDC_Device_Event_Stub:
  14               	.LFB66:
  15               		.file 1 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c"
   1:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** /*
   2:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****              LUFA Library
   3:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****      Copyright (C) Dean Camera, 2010.
   4:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****               
   5:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   dean [at] fourwalledcubicle [dot] com
   6:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****       www.fourwalledcubicle.com
   7:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** */
   8:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
   9:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** /*
  10:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  12:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   Permission to use, copy, modify, distribute, and sell this 
  13:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   software and its documentation for any purpose is hereby granted
  14:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   without fee, provided that the above copyright notice appear in 
  15:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   all copies and that both that the copyright notice and this
  16:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   permission notice and warranty disclaimer appear in supporting 
  17:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   documentation, and that the name of the author not be used in 
  18:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   advertising or publicity pertaining to distribution of the 
  19:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   software without specific, written prior permission.
  20:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  21:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   The author disclaim all warranties with regard to this
  22:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   software, including all implied warranties of merchantability
  23:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   and fitness.  In no event shall the author be liable for any
  24:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   special, indirect or consequential damages or any damages
  25:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   in an action of contract, negligence or other tortious action,
  27:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   arising out of or in connection with the use or performance of
  28:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****   this software.
  29:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** */
  30:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  31:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #include "../../HighLevel/USBMode.h"
  33:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #if defined(USB_CAN_BE_DEVICE)
  34:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  35:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #define  __INCLUDE_FROM_CDC_CLASS_DEVICE_C
  36:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #define  __INCLUDE_FROM_CDC_DRIVER
  37:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** #include "CDC.h"
  38:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  39:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_Event_Stub(void)
  40:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
  16               		.loc 1 40 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE66:
  26               		.weak	EVENT_CDC_Device_LineEncodingChanged
  27               		.set	EVENT_CDC_Device_LineEncodingChanged,CDC_Device_Event_Stub
  28               		.weak	EVENT_CDC_Device_ControLineStateChanged
  29               		.set	EVENT_CDC_Device_ControLineStateChanged,CDC_Device_Event_Stub
  30               		.weak	EVENT_CDC_Device_BreakSent
  31               		.set	EVENT_CDC_Device_BreakSent,CDC_Device_Event_Stub
  32               		.section	.text.CDC_Device_ProcessControlRequest,"ax",@progbits
  33               	.global	CDC_Device_ProcessControlRequest
  35               	CDC_Device_ProcessControlRequest:
  36               	.LFB67:
  41:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  42:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
  43:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  44:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_ProcessControlRequest(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
  45:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
  37               		.loc 1 45 0
  38               		.cfi_startproc
  39               	.LVL0:
  40               		.loc 1 45 0
  41 0000 CF93      		push r28
  42               	.LCFI0:
  43               		.cfi_def_cfa_offset 3
  44               		.cfi_offset 28, -2
  45 0002 DF93      		push r29
  46               	.LCFI1:
  47               		.cfi_def_cfa_offset 4
  48               		.cfi_offset 29, -3
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 2 */
  52               	.L__stack_usage = 2
  53 0004 EC01      		movw r28,r24
  54               	.LBB65:
  55               	.LBB66:
  56               		.file 2 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h"
   1:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
   2:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****              LUFA Library
   3:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****      Copyright (C) Dean Camera, 2010.
   4:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****               
   5:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   dean [at] fourwalledcubicle [dot] com
   6:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****       www.fourwalledcubicle.com
   7:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
   8:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
   9:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
  10:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  12:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Permission to use, copy, modify, distribute, and sell this 
  13:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software and its documentation for any purpose is hereby granted
  14:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   without fee, provided that the above copyright notice appear in 
  15:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   all copies and that both that the copyright notice and this
  16:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   permission notice and warranty disclaimer appear in supporting 
  17:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   documentation, and that the name of the author not be used in 
  18:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   advertising or publicity pertaining to distribution of the 
  19:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software without specific, written prior permission.
  20:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  21:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   The author disclaim all warranties with regard to this
  22:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software, including all implied warranties of merchantability
  23:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   and fitness.  In no event shall the author be liable for any
  24:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   special, indirect or consequential damages or any damages
  25:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   in an action of contract, negligence or other tortious action,
  27:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   arising out of or in connection with the use or performance of
  28:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   this software.
  29:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
  30:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  31:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \file
  32:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \brief USB device endpoint management definitions.
  33:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  34:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  This file contains structures, function prototypes and macros related to the management of the 
  35:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  data endpoints when the library is initialized in USB device mode.
  36:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  37:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  40:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  41:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_USB
  42:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointManagement Endpoint Management
  43:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  44:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  45:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  46:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  send/receive functions for various data types.
  47:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  48:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @{
  49:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  50:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  51:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointRW Endpoint Data Reading and Writing
  52:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  53:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  54:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  55:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  
  56:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  57:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPrimitiveRW Read/Write of Primitive Data Types
  58:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  59:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  60:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  from and to endpoints.
  61:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  62:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  63:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  64:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointStreamRW Read/Write of Multi-Byte Streams
  65:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  66:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of data strea
  67:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  and to endpoints.
  68:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  69:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  70:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointPacketManagement Endpoint Packet Management
  71:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  72:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  73:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  74:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  75:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #ifndef __ENDPOINT_H__
  76:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #define __ENDPOINT_H__
  77:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  78:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Includes: */
  79:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/io.h>
  80:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/pgmspace.h>
  81:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/eeprom.h>
  82:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <stdbool.h>
  83:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  84:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../../../Common/Common.h"
  85:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../HighLevel/USBTask.h"
  86:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "USBInterrupt.h"
  87:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  88:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
  89:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#include "../HighLevel/StreamCallbacks.h"
  90:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  91:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Enable C linkage for C++ Compilers: */
  93:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if defined(__cplusplus)
  94:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			extern "C" {
  95:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  96:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  97:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Preprocessor Checks: */
  98:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  99:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
 100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
 101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Public Interface - May be used in end-application: */
 103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
 104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the OUT direction - i.e. data flows from host to device.
 106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_OUT                      (0 << EPDIR)
 108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the IN direction - i.e. data flows from device to host.
 111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_IN                       (1 << EPDIR)
 113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank at the one time.
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_SINGLE                  (0 << EPBK0)
 120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  accesses the second bank.
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_DOUBLE                  (1 << EPBK0)
 127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint address for the default control endpoint, which always resides in address 0. This i
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  defined for convenience to give more readable code when used with the endpoint macros.
 130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_CONTROLEP                    0
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  value in the device descriptor. Not available if the FIXED_CONTROL_ENDPOINT_SIZE token is d
 136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 */
 137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE   8
 138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint number mask, for masking against endpoint addresses to retrieve the endpoint's
 141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  numerical address in the device.
 142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPNUM_MASK                   0x07
 144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint direction mask, for masking against endpoint addresses to retrieve the endpoint's
 146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction for comparing with the ENDPOINT_DESCRIPTOR_DIR_* masks.
 147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPDIR_MASK                   0x80
 149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint bank size mask, for masking against endpoint addresses to retrieve the endpoint's
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank size in the device.
 152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPSIZE_MASK                  0x7F
 154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Maximum size in bytes of a given endpoint.
 156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_MAX_SIZE(n)                  _ENDPOINT_GET_MAXSIZE(n)
 160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates if the given endpoint supports double banking.
 162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DOUBLEBANK_SUPPORTED(n)      _ENDPOINT_GET_DOUBLEBANK(n)
 166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(CONTROL_ONLY_DEVICE)
 168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 */
 173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      7
 174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      5
 176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS          1
 179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Enums: */
 182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   transfer by the host or device.
 191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   waiting for the endpoint to become ready.
 194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   no USB endpoint traffic can occur until th
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   has resumed.
 198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   within the software timeout period set by 
 201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Stream_* functions.
 206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_Stream_RW_ErrorCodes_t
 210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_EndpointStalled    = 1, /**< The endpoint was stalled during the stream
 213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   transfer by the host or device.
 214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   the transfer.
 217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   no USB endpoint traffic can occur until the bus
 220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   has resumed.
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_Timeout            = 4, /**< The host failed to accept or send the next packe
 223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   within the software timeout period set by the
 224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   \ref USB_STREAM_TIMEOUT_MS macro.
 225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_CallbackAborted    = 5, /**< Indicates that the stream's callback function
 227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                               *   aborted the transfer early.
 228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Control_Stream_* functions..
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_ControlStream_RW_ErrorCodes_t
 236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_HostAborted        = 1, /**< The aborted the transfer prematurely. */
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   the transfer.
 241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   no USB endpoint traffic can occur until the bus
 244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   has resumed.
 245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        of the selected AVR model.
 253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCX;
 263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_4_AVR)
 264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_2_AVR)
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  been manipulated.
 273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Index of the currently selected endpoint.
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return ENDPOINT_CONTROLEP;
 283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  number (and discarding the endpoint direction bit).
 289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint.
 292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  In and Out pointers to the bank's contents.
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 309:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber)
 310:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 311:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = (1 << EndpointNumber);
 312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = 0;
 313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 315:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 316:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and from a host.
 317:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 318:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 319:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 320:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 321:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void)
 322:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 323:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << EPEN);
 324:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 325:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 326:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 327:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to and from a host.
 328:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 330:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void)
 331:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 332:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX &= ~(1 << EPEN);
 333:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 334:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 335:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 336:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 337:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 * \return Boolean True if the currently selected endpoint is enabled, false otherwise.
 338:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 339:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 340:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void)
 341:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 342:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 343:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 344:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 346:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 347:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 348:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 349:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction and the endpoint bank is full.
 350:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 351:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 352:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 353:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint may be read from or written to, depe
 354:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 355:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 356:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 357:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 358:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 359:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 360:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 361:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is configured.
 362:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 363:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint has been configured, false otherwise
 364:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 365:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 366:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void)
 367:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 368:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 369:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 370:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 371:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 372:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 373:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  masking the return value against (1 << {Endpoint Number}).
 374:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 375:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 376:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 377:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 378:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 379:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 380:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEINT;
 381:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 382:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 383:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 384:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoints).
 385:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 386:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 387:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 388:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the specified endpoint has interrupted, false otherwise.
 389:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 390:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 391:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 392:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 393:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINT & (1 << EndpointNumber)) ? true : false);
 394:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 395:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 396:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected IN endpoint is ready for a new packet.
 397:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 398:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 399:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 400:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the current endpoint is ready for an IN packet, false otherwise.
 401:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 402:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 403:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void)
 404:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 405:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI))  ? true : false);
 406:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 407:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 408:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected OUT endpoint has received new packet.
 409:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 410:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 411:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 412:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if current endpoint is has received an OUT packet, false otherwise.
 413:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 414:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 415:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 416:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 418:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 419:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 420:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 421:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 422:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 423:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 424:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the selected endpoint has received a SETUP packet, false otherwise.
 425:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 426:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 427:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 428:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 429:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  57               		.loc 2 429 0
  58 0006 8091 E800 		lds r24,232
  59               	.LVL1:
  60               	.LBE66:
  61               	.LBE65:
  46:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_IsSETUPReceived()))
  62               		.loc 1 46 0
  63 000a 83FF      		sbrs r24,3
  64 000c 00C0      		rjmp .L2
  47:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return;
  48:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  
  49:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (USB_ControlRequest.wIndex != CDCInterfaceInfo->Config.ControlInterfaceNumber)
  65               		.loc 1 49 0
  66 000e 8881      		ld r24,Y
  67 0010 90E0      		ldi r25,0
  68 0012 2091 0000 		lds r18,USB_ControlRequest+4
  69 0016 3091 0000 		lds r19,USB_ControlRequest+4+1
  70 001a 2817      		cp r18,r24
  71 001c 3907      		cpc r19,r25
  72 001e 01F0      		breq .+2
  73 0020 00C0      		rjmp .L2
  50:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return;
  51:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  52:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	switch (USB_ControlRequest.bRequest)
  74               		.loc 1 52 0
  75 0022 8091 0000 		lds r24,USB_ControlRequest+1
  76 0026 8132      		cpi r24,lo8(33)
  77 0028 01F0      		breq .L4
  78 002a 00F4      		brsh .L5
  79 002c 8032      		cpi r24,lo8(32)
  80 002e 01F0      		breq .L6
  81 0030 00C0      		rjmp .L2
  82               	.L5:
  83 0032 8232      		cpi r24,lo8(34)
  84 0034 01F0      		breq .L7
  85 0036 8332      		cpi r24,lo8(35)
  86 0038 01F0      		breq .L8
  87 003a 00C0      		rjmp .L2
  88               	.L4:
  53:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
  54:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		case REQ_GetLineEncoding:
  55:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  89               		.loc 1 55 0
  90 003c 8091 0000 		lds r24,USB_ControlRequest
  91 0040 813A      		cpi r24,lo8(-95)
  92 0042 01F0      		breq .+2
  93 0044 00C0      		rjmp .L2
  94               	.LBB67:
  95               	.LBB68:
 430:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 431:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 432:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 433:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint for the next packet.
 434:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 435:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 436:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 437:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This is not applicable for non CONTROL type endpoints. 
 438:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 439:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 440:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void)
 441:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
  96               		.loc 2 442 0
  97 0046 8091 E800 		lds r24,232
  98 004a 877F      		andi r24,lo8(-9)
  99 004c 8093 E800 		sts 232,r24
 100               	.LBE68:
 101               	.LBE67:
  56:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			{
  57:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearSETUP();
  58:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_Write_Control_Stream_LE(&CDCInterfaceInfo->State.LineEncoding, sizeof(CDCInterfaceInfo
 102               		.loc 1 58 0
 103 0050 67E0      		ldi r22,lo8(7)
 104 0052 70E0      		ldi r23,0
 105 0054 CE01      		movw r24,r28
 106 0056 0F96      		adiw r24,15
 107 0058 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 108               	.LVL2:
 109               	.LBB69:
 110               	.LBB70:
 443:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 444:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 445:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 446:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 447:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 448:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 449:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 450:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 451:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void)
 452:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 453:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 455:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 456:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << TXINI);
 457:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 458:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 459:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 460:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 461:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 462:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 463:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 464:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 465:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 466:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void)
 467:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 468:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 469:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 111               		.loc 2 469 0
 112 005c 8091 E800 		lds r24,232
 113 0060 8B77      		andi r24,lo8(123)
 114 0062 00C0      		rjmp .L12
 115               	.L6:
 116               	.LBE70:
 117               	.LBE69:
  59:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearOUT();
  60:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			}
  61:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			
  62:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			break;
  63:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		case REQ_SetLineEncoding:
  64:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 118               		.loc 1 64 0
 119 0064 8091 0000 		lds r24,USB_ControlRequest
 120 0068 8132      		cpi r24,lo8(33)
 121 006a 01F4      		brne .L2
 122               	.LBB71:
 123               	.LBB72:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 124               		.loc 2 442 0
 125 006c 8091 E800 		lds r24,232
 126 0070 877F      		andi r24,lo8(-9)
 127 0072 8093 E800 		sts 232,r24
 128               	.LBE72:
 129               	.LBE71:
  65:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			{
  66:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearSETUP();
  67:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_Read_Control_Stream_LE(&CDCInterfaceInfo->State.LineEncoding, sizeof(CDCInterfaceInfo-
 130               		.loc 1 67 0
 131 0076 67E0      		ldi r22,lo8(7)
 132 0078 70E0      		ldi r23,0
 133 007a CE01      		movw r24,r28
 134 007c 0F96      		adiw r24,15
 135 007e 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 136               	.LVL3:
  68:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				EVENT_CDC_Device_LineEncodingChanged(CDCInterfaceInfo);
 137               		.loc 1 68 0
 138 0082 CE01      		movw r24,r28
 139 0084 0E94 0000 		call EVENT_CDC_Device_LineEncodingChanged
 140               	.LVL4:
 141               	.LBB73:
 142               	.LBB74:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 143               		.loc 2 454 0
 144 0088 8091 E800 		lds r24,232
 145 008c 8E77      		andi r24,lo8(126)
 146               	.L12:
 147 008e 8093 E800 		sts 232,r24
 148 0092 00C0      		rjmp .L2
 149               	.L7:
 150               	.LBE74:
 151               	.LBE73:
  69:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearIN();
  70:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			}
  71:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
  72:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			break;
  73:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		case REQ_SetControlLineState:
  74:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 152               		.loc 1 74 0
 153 0094 8091 0000 		lds r24,USB_ControlRequest
 154 0098 8132      		cpi r24,lo8(33)
 155 009a 01F4      		brne .L2
 156               	.LBB75:
 157               	.LBB76:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 158               		.loc 2 442 0
 159 009c 8091 E800 		lds r24,232
 160 00a0 877F      		andi r24,lo8(-9)
 161 00a2 8093 E800 		sts 232,r24
 162               	.LBE76:
 163               	.LBE75:
  75:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			{				
  76:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearSETUP();
  77:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				
  78:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;
 164               		.loc 1 78 0
 165 00a6 8091 0000 		lds r24,USB_ControlRequest+2
 166 00aa 8D87      		std Y+13,r24
  79:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
 167               		.loc 1 79 0
 168 00ac CE01      		movw r24,r28
 169 00ae 0E94 0000 		call EVENT_CDC_Device_ControLineStateChanged
 170               	.LVL5:
 171 00b2 00C0      		rjmp .L13
 172               	.L8:
  80:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  81:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearStatusStage();
  82:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			}
  83:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
  84:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			break;
  85:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		case REQ_SendBreak:
  86:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 173               		.loc 1 86 0
 174 00b4 8091 0000 		lds r24,USB_ControlRequest
 175 00b8 8132      		cpi r24,lo8(33)
 176 00ba 01F4      		brne .L2
 177               	.LBB77:
 178               	.LBB78:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 179               		.loc 2 442 0
 180 00bc 8091 E800 		lds r24,232
 181 00c0 877F      		andi r24,lo8(-9)
 182 00c2 8093 E800 		sts 232,r24
 183               	.LBE78:
 184               	.LBE77:
  87:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			{				
  88:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearSETUP();
  89:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				
  90:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
 185               		.loc 1 90 0
 186 00c6 6091 0000 		lds r22,USB_ControlRequest+2
 187 00ca CE01      		movw r24,r28
 188 00cc 0E94 0000 		call EVENT_CDC_Device_BreakSent
 189               	.LVL6:
 190               	.L13:
 191               	/* epilogue start */
  91:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearStatusStage();
  93:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			}
  94:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  95:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			break;
  96:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
  97:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 192               		.loc 1 97 0
 193 00d0 DF91      		pop r29
 194 00d2 CF91      		pop r28
 195               	.LVL7:
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 				Endpoint_ClearStatusStage();
 196               		.loc 1 92 0
 197 00d4 0C94 0000 		jmp Endpoint_ClearStatusStage
 198               	.LVL8:
 199               	.L2:
 200               	/* epilogue start */
 201               		.loc 1 97 0
 202 00d8 DF91      		pop r29
 203 00da CF91      		pop r28
 204               	.LVL9:
 205 00dc 0895      		ret
 206               		.cfi_endproc
 207               	.LFE67:
 209               		.section	.text.CDC_Device_ConfigureEndpoints,"ax",@progbits
 210               	.global	CDC_Device_ConfigureEndpoints
 212               	CDC_Device_ConfigureEndpoints:
 213               	.LFB68:
  98:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
  99:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** bool CDC_Device_ConfigureEndpoints(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 214               		.loc 1 100 0
 215               		.cfi_startproc
 216               	.LVL10:
 217 0000 0F93      		push r16
 218               	.LCFI2:
 219               		.cfi_def_cfa_offset 3
 220               		.cfi_offset 16, -2
 221 0002 1F93      		push r17
 222               	.LCFI3:
 223               		.cfi_def_cfa_offset 4
 224               		.cfi_offset 17, -3
 225 0004 CF93      		push r28
 226               	.LCFI4:
 227               		.cfi_def_cfa_offset 5
 228               		.cfi_offset 28, -4
 229 0006 DF93      		push r29
 230               	.LCFI5:
 231               		.cfi_def_cfa_offset 6
 232               		.cfi_offset 29, -5
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 4 */
 236               	.L__stack_usage = 4
 237 0008 EC01      		movw r28,r24
 101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	memset(&CDCInterfaceInfo->State, 0x00, sizeof(CDCInterfaceInfo->State));
 238               		.loc 1 101 0
 239 000a FC01      		movw r30,r24
 240 000c 3D96      		adiw r30,13
 241 000e 89E0      		ldi r24,lo8(9)
 242               	.LVL11:
 243 0010 DF01      		movw r26,r30
 244               		0:
 245 0012 1D92      		st X+,__zero_reg__
 246 0014 8A95      		dec r24
 247 0016 01F4      		brne 0b
 102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_ConfigureEndpoint(CDCInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
 248               		.loc 1 103 0
 249 0018 2A81      		ldd r18,Y+2
 250 001a 3B81      		ldd r19,Y+3
 251 001c 8C81      		ldd r24,Y+4
 252 001e 8823      		tst r24
 253 0020 01F0      		breq .L22
 254 0022 14E0      		ldi r17,lo8(4)
 255 0024 00C0      		rjmp .L16
 256               	.L22:
 257 0026 10E0      		ldi r17,0
 258               	.L16:
 259               		.loc 1 103 0 is_stmt 0 discriminator 3
 260 0028 0981      		ldd r16,Y+1
 261               	.LVL12:
 262               	.LBB97:
 263               	.LBB98:
 470:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 471:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << RXOUTI);	
 472:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 473:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 474:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 475:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 476:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 477:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 478:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborted and the host can begin its own recovery sequence.
 479:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 480:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 481:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 482:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint.
 483:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 484:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 485:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 486:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 487:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void)
 488:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 489:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 490:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 491:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 492:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 493:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 494:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 495:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 496:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 497:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void)
 498:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 499:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQC);
 500:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 501:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 502:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 503:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 504:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 505:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 506:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint is stalled, false otherwise.
 507:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 508:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 509:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void)
 510:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 511:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 512:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 513:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 514:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 515:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 516:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void)
 517:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 518:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << RSTDT);
 519:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 520:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 521:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines the currently selected endpoint's direction.
 522:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 523:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return The currently selected endpoint's direction, as a ENDPOINT_DIR_* mask.
 524:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 525:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 526:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 527:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 528:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (UECFG0X & ENDPOINT_DIR_IN);
 529:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 530:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 531:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sets the direction of the currently selected endpoint.
 532:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 533:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a ENDPOINT_DIR_* mask.
 534:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 535:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 536:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 537:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 538:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECFG0X = ((UECFG0X & ~ENDPOINT_DIR_IN) | DirectionMask);
 539:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 540:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 541:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 542:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 543:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 544:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 545:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 546:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 547:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 548:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void)
 549:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 550:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEDATX;
 551:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 552:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 553:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes one byte from the currently selected endpoint's bank, for IN direction endpoints.
 554:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 555:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 556:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 557:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Byte  Next byte to write into the the currently selected endpoint's FIFO buffer.
 558:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 559:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 560:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte)
 561:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 562:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = Byte;
 563:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 564:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 565:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 566:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 567:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 568:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 569:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void) ATTR_ALWAYS_INLINE;
 570:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void)
 571:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 572:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 573:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 574:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 575:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 576:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 577:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in little endian format, for OUT
 578:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 579:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 580:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 581:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 582:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 583:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 584:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 585:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void)
 586:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 587:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 588:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 589:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 590:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 591:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 592:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 593:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 594:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 595:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 596:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 597:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 598:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 599:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in big endian format, for OUT
 600:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 601:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 602:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 603:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 604:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 605:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 606:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 607:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void)
 608:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 609:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 610:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 611:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 612:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 613:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 614:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 615:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 616:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 617:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 618:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 619:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 620:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 621:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in little endian format, for IN
 622:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 623:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 624:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 625:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 626:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 627:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 628:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 629:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word)
 630:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 631:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 632:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 633:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 634:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 635:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in big endian format, for IN
 636:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 637:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 638:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 639:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 640:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 641:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 642:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 643:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word)
 644:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 645:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 646:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 647:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 648:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 649:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards two bytes from the currently selected endpoint's bank, for OUT direction endpoints.
 650:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 651:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 652:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 653:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void) ATTR_ALWAYS_INLINE;
 654:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void)
 655:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 656:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 657:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 658:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 659:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 660:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 661:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 662:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in little endian format, for OU
 663:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 664:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 665:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 666:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 667:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 668:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 669:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 670:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void)
 671:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 672:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 673:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 674:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 675:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 676:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 677:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 678:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 679:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 680:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 681:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 682:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 683:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 684:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 685:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 686:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in big endian format, for OUT
 687:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 688:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 689:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 690:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 691:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 692:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 693:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 694:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void)
 695:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 696:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 697:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 698:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 699:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 700:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 701:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 702:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 703:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 704:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 705:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 706:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 707:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 708:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 709:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 710:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in little endian format, for IN
 711:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 712:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 713:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 714:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 715:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 716:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 717:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 718:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord)
 719:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 720:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 721:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 722:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 723:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 724:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 725:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 726:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in big endian format, for IN
 727:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 728:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 729:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 730:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 731:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 732:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 733:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 734:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord)
 735:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 736:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 737:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 738:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 739:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 740:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 741:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 742:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards four bytes from the currently selected endpoint's bank, for OUT direction endpoints
 743:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 744:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 745:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 746:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void) ATTR_ALWAYS_INLINE;
 747:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void)
 748:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 749:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 750:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 751:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 752:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 753:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 754:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 755:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 756:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 757:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* External Variables: */
 758:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Global indicating the maximum packet size of the default control endpoint located at address
 759:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  0 in the device. This value is set to the value indicated in the device descriptor in the us
 760:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  project once the USB interface is initialized into device mode.
 761:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 762:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If space is an issue, it is possible to fix this to a static value by defining the control
 763:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint size in the FIXED_CONTROL_ENDPOINT_SIZE token passed to the compiler in the makefil
 764:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  via the -D switch. When a fixed control endpoint size is used, the size is no longer dynamic
 765:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  read from the descriptors at runtime and instead fixed to the given value. When used, it is
 766:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  important that the descriptor control endpoint size value matches the size given as the
 767:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  FIXED_CONTROL_ENDPOINT_SIZE token - it is recommended that the FIXED_CONTROL_ENDPOINT_SIZE t
 768:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  be used in the descriptors to ensure this.
 769:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 770:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This variable should be treated as read-only in the user application, and never manual
 771:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        changed in value.
 772:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 773:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 774:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				extern uint8_t USB_ControlEndpointSize;
 775:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 776:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define USB_ControlEndpointSize FIXED_CONTROL_ENDPOINT_SIZE
 777:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 778:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 779:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
 780:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
 781:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM     , StreamCallbackPtr_t Callback
 782:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 783:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM
 784:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 785:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 786:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 787:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and banking mode. Endpoints should be allocated in ascending order by their address in the
 788:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  device (i.e. endpoint 1 should be configured before endpoint 2 and so on) to prevent fragmen
 789:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  of the USB FIFO memory.
 790:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 791:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The endpoint type may be one of the EP_TYPE_* macros listed in LowLevel.h and the direction
 792:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  may be either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT_DIR_IN.
 793:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 794:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The bank size must indicate the maximum packet size that the endpoint can handle. Different
 795:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint numbers can handle different maximum packet sizes - refer to the chosen USB AVR's
 796:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  datasheet to determine the maximum bank size for each endpoint.
 797:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 798:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The banking mode may be either \ref ENDPOINT_BANK_SINGLE or \ref ENDPOINT_BANK_DOUBLE.
 799:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 800:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 801:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        it is automatically configured by the library internally.
 802:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 803:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 804:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine will select the specified endpoint, and the endpoint will remain selected
 805:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        once the routine completes regardless of if the endpoint configuration succeeds.
 806:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 807:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the configuration succeeded, false otherwise.
 808:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 809:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool Endpoint_ConfigureEndpoint(const uint8_t  Number,
 810:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Type,
 811:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Direction,
 812:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint16_t Size,
 813:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Banks);
 814:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 815:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Spin-loops until the currently selected non-control endpoint is ready for the next packet of
 816:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to be read or written to it.
 817:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 818:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be called on CONTROL type endpoints.
 819:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 820:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 821:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 822:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_WaitUntilReady_ErrorCodes_t enum.
 823:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 824:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_WaitUntilReady(void);
 825:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 826:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Completes the status stage of a control transfer on a CONTROL type endpoint automatically,
 827:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  with respect to the data direction. This is a convenience function which can be used to
 828:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  simplify user control request handling.
 829:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 830:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void Endpoint_ClearStatusStage(void);
 831:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 832:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads and discards the given number of bytes from the endpoint from the given buffer,
 833:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 834:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 835:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 836:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the next
 837:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  packet is ready, allowing for early aborts of stream transfers.
 838:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 839:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 840:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 841:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 842:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 843:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 844:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 845:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 846:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 847:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to send via the currently selected endpoint.
 848:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 849:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 850:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 851:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 852:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Discard_Stream(uint16_t Length
 853:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM);
 854:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 855:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in little endian,
 856:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 857:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 858:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 859:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 860:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 861:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 862:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 863:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 864:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 865:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 866:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 867:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 868:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 869:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 870:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 871:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 872:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 873:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 874:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 875:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 876:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_LE(const void* Buffer,
 877:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 878:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 879:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 880:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_LE().
 881:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 882:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 883:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 884:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 885:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 886:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 887:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 888:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 889:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 890:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_LE(const void* Buffer,
 891:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 892:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 893:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 894:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_LE().
 895:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 896:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 897:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 898:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 899:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 900:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 901:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 902:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 903:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 904:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 905:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 906:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_LE(const void* Buffer,
 907:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 908:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 909:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 910:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in big endian,
 911:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 912:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 913:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 914:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 915:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 916:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 917:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 918:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 919:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 920:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 921:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 922:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 923:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 924:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 925:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 926:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 927:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 928:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 929:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 930:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 931:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_BE(const void* Buffer,
 932:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 933:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 934:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 935:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_BE().
 936:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 937:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 938:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 939:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 940:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 941:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 942:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 943:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 944:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 945:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_BE(const void* Buffer,
 946:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 947:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 948:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 949:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_BE().
 950:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 951:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 952:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 953:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 954:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 955:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 956:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 957:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 958:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 959:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 960:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 961:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_BE(const void* Buffer,
 962:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 963:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 964:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 965:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in little endian,
 966:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 967:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 968:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 969:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
 970:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
 971:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 972:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 973:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 974:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 975:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 976:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 977:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 978:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 979:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 980:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
 981:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 982:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 983:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 984:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 985:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 986:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_LE(void* Buffer,
 987:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
 988:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 989:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 990:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_LE().
 991:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 992:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 993:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 994:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
 995:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 996:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 997:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 998:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 999:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1000:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_LE(void* Buffer,
1001:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1002:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1003:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1004:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in big endian,
1005:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
1006:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
1007:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
1008:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
1009:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
1010:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1011:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
1012:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
1013:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
1014:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1015:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
1016:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1017:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1018:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1019:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
1020:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1021:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1022:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1023:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1024:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1025:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_BE(void* Buffer,
1026:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
1027:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1028:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1029:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_BE().
1030:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1031:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1032:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1033:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
1034:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1035:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1036:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1037:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1038:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1039:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_BE(void* Buffer,
1040:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1041:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1042:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1043:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in littl
1044:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1045:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1046:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1047:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1048:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1049:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1050:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1051:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1052:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1053:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1054:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1055:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1056:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1057:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1058:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1059:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1060:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1061:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1062:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1063:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1064:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_LE(const void* Buffer,
1065:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1066:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1067:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of Endpoint_Write_Control_Stream_LE.
1068:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1069:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1070:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1071:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1072:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1073:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1074:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1075:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1076:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1077:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1078:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1079:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1080:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1081:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1082:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1083:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1084:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1085:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_LE(const void* Buffer,
1086:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1087:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1088:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_LE().
1089:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1090:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1091:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1092:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1093:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1094:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1095:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1096:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1097:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1098:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1099:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_LE(const void* Buffer,
1109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in big e
1112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_BE(const void* Buffer,
1133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_BE(const void* Buffer,
1154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_BE(const void* Buffer,
1177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in little en
1180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_LE(void* Buffer,
1201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_LE().
1204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_LE(void* Buffer,
1222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in big endia
1225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_BE(void* Buffer,
1246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_BE().
1249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_BE(void* Buffer,
1267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Private Interface - For use in library only: */
1270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	#if !defined(__DOXYGEN__)
1271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
1272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE(n)               _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## n)
1273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE2(details)        _ENDPOINT_GET_MAXSIZE3(details)
1274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE3(maxsize, db)    maxsize
1275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK(n)            _ENDPOINT_GET_DOUBLEBANK2(ENDPOINT_DETAILS_EP ## 
1277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK2(details)     _ENDPOINT_GET_DOUBLEBANK3(details)
1278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK3(maxsize, db) db
1279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
1281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               256, true
1283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  true
1284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true
1286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP5               64,  true
1287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP6               64,  true
1288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
1289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               64,  false
1291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  false
1292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true			
1294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
1295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define Endpoint_ConfigureEndpoint(Number, Type, Direction, Size, Banks)                        
1297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                     (__builtin_constant_p(Size) ? Endpoint_ConfigureEndpointStatic((Number),   
1298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Type),     
1299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Direction),
1300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    Size, Banks)
1301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                   Endpoint_ConfigureEndpointDynamic((Number),  
1302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Type),    
1303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Direction)
1304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     Size, Banks
1305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
1307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void    Endpoint_ClearEndpoints(void);
1308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_BytesToEPSizeMaskDynamic(const uint16_t Size);
1309:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool    Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
1310:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG0XData,
1311:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG1XData);			
1312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
1314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
1315:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
1316:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1317:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
1318:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
1319:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1320:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
1321:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
1322:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
1323:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
1324:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				}
1325:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1326:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
1327:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1328:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointStatic(const uint8_t Number,
1330:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Type,
1331:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Direction,
1332:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint16_t Size,
1333:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Banks)
1334:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1335:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
1336:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
1337:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1338:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1339:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointDynamic(const uint8_t Number,
1340:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Type,
1341:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Direction,
1342:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint16_t Size,
1343:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Banks)
1344:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
1346:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 264               		.loc 2 1346 0 is_stmt 1 discriminator 3
 265 002a C901      		movw r24,r18
 266 002c 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 267               	.LVL13:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 268               		.loc 2 1345 0 discriminator 3
 269 0030 412F      		mov r20,r17
 270 0032 482B      		or r20,r24
 271 0034 4260      		ori r20,lo8(2)
 272 0036 61E8      		ldi r22,lo8(-127)
 273 0038 802F      		mov r24,r16
 274 003a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 275               	.LVL14:
 276               	.LBE98:
 277               	.LBE97:
 278               		.loc 1 103 0 discriminator 3
 279 003e 8823      		tst r24
 280 0040 01F0      		breq .L18
 104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 							         ENDPOINT_DIR_IN, CDCInterfaceInfo->Config.DataINEndpointSize,
 105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 							         CDCInterfaceInfo->Config.DataINEndpointDoubleBank ? ENDPOINT_BANK_DOUBLE : ENDPOINT
 106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		return false;
 108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_ConfigureEndpoint(CDCInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
 281               		.loc 1 110 0
 282 0042 2E81      		ldd r18,Y+6
 283 0044 3F81      		ldd r19,Y+7
 284 0046 8885      		ldd r24,Y+8
 285 0048 8823      		tst r24
 286 004a 01F0      		breq .L23
 287 004c 14E0      		ldi r17,lo8(4)
 288               	.LVL15:
 289 004e 00C0      		rjmp .L19
 290               	.LVL16:
 291               	.L23:
 292 0050 10E0      		ldi r17,0
 293               	.LVL17:
 294               	.L19:
 295               		.loc 1 110 0 is_stmt 0 discriminator 3
 296 0052 0D81      		ldd r16,Y+5
 297               	.LVL18:
 298               	.LBB99:
 299               	.LBB100:
 300               		.loc 2 1346 0 is_stmt 1 discriminator 3
 301 0054 C901      		movw r24,r18
 302 0056 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 303               	.LVL19:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 304               		.loc 2 1345 0 discriminator 3
 305 005a 412F      		mov r20,r17
 306 005c 482B      		or r20,r24
 307 005e 4260      		ori r20,lo8(2)
 308 0060 60E8      		ldi r22,lo8(-128)
 309 0062 802F      		mov r24,r16
 310 0064 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 311               	.LVL20:
 312               	.LBE100:
 313               	.LBE99:
 314               		.loc 1 110 0 discriminator 3
 315 0068 8823      		tst r24
 316 006a 01F0      		breq .L18
 111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                                 ENDPOINT_DIR_OUT, CDCInterfaceInfo->Config.DataOUTEndpointSize,
 112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                                 CDCInterfaceInfo->Config.DataOUTEndpointDoubleBank ? ENDPOINT_BAN
 113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		return false;
 115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_ConfigureEndpoint(CDCInterfaceInfo->Config.NotificationEndpointNumber, EP_TYPE_INTE
 317               		.loc 1 117 0
 318 006c 2A85      		ldd r18,Y+10
 319 006e 3B85      		ldd r19,Y+11
 320 0070 8C85      		ldd r24,Y+12
 321 0072 8823      		tst r24
 322 0074 01F0      		breq .L24
 323 0076 14E0      		ldi r17,lo8(4)
 324               	.LVL21:
 325 0078 00C0      		rjmp .L21
 326               	.LVL22:
 327               	.L24:
 328 007a 10E0      		ldi r17,0
 329               	.LVL23:
 330               	.L21:
 331               		.loc 1 117 0 is_stmt 0 discriminator 3
 332 007c C985      		ldd r28,Y+9
 333               	.LVL24:
 334               	.LBB101:
 335               	.LBB102:
 336               		.loc 2 1346 0 is_stmt 1 discriminator 3
 337 007e C901      		movw r24,r18
 338 0080 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 339               	.LVL25:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 340               		.loc 2 1345 0 discriminator 3
 341 0084 412F      		mov r20,r17
 342 0086 482B      		or r20,r24
 343 0088 4260      		ori r20,lo8(2)
 344 008a 61EC      		ldi r22,lo8(-63)
 345 008c 8C2F      		mov r24,r28
 346               	/* epilogue start */
 347               	.LBE102:
 348               	.LBE101:
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                                 ENDPOINT_DIR_IN, CDCInterfaceInfo->Config.NotificationEndpointSiz
 119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                                 CDCInterfaceInfo->Config.NotificationEndpointDoubleBank ? ENDPOIN
 120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		return false;
 122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return true;
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 349               		.loc 1 125 0 discriminator 3
 350 008e DF91      		pop r29
 351 0090 CF91      		pop r28
 352               	.LVL26:
 353 0092 1F91      		pop r17
 354               	.LVL27:
 355 0094 0F91      		pop r16
 356               	.LVL28:
 357               	.LBB104:
 358               	.LBB103:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 359               		.loc 2 1345 0 discriminator 3
 360 0096 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 361               	.LVL29:
 362               	.L18:
 363               	.LBE103:
 364               	.LBE104:
 365               		.loc 1 125 0
 366 009a 80E0      		ldi r24,0
 367               	/* epilogue start */
 368 009c DF91      		pop r29
 369 009e CF91      		pop r28
 370               	.LVL30:
 371 00a0 1F91      		pop r17
 372 00a2 0F91      		pop r16
 373 00a4 0895      		ret
 374               		.cfi_endproc
 375               	.LFE68:
 377               		.section	.text.CDC_Device_SendString,"ax",@progbits
 378               	.global	CDC_Device_SendString
 380               	CDC_Device_SendString:
 381               	.LFB70:
 126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_USBTask(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return;
 131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	CDC_Device_Flush(CDCInterfaceInfo);
 133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** uint8_t CDC_Device_SendString(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                               const char* const Data,
 137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                               const uint16_t Length)
 138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 382               		.loc 1 138 0
 383               		.cfi_startproc
 384               	.LVL31:
 385 0000 0F93      		push r16
 386               	.LCFI6:
 387               		.cfi_def_cfa_offset 3
 388               		.cfi_offset 16, -2
 389 0002 1F93      		push r17
 390               	.LCFI7:
 391               		.cfi_def_cfa_offset 4
 392               		.cfi_offset 17, -3
 393               	/* prologue: function */
 394               	/* frame size = 0 */
 395               	/* stack size = 2 */
 396               	.L__stack_usage = 2
 397 0004 FC01      		movw r30,r24
 398 0006 CB01      		movw r24,r22
 399               	.LVL32:
 400 0008 BA01      		movw r22,r20
 401               	.LVL33:
 139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 402               		.loc 1 139 0
 403 000a 2EB3      		in r18,0x1e
 404 000c 2430      		cpi r18,lo8(4)
 405 000e 01F4      		brne .L29
 406               		.loc 1 139 0 is_stmt 0 discriminator 1
 407 0010 0785      		ldd r16,Z+15
 408 0012 1089      		ldd r17,Z+16
 409 0014 2189      		ldd r18,Z+17
 410 0016 3289      		ldd r19,Z+18
 411 0018 012B      		or r16,r17
 412 001a 022B      		or r16,r18
 413 001c 032B      		or r16,r19
 414 001e 01F0      		breq .L29
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
 141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpointNumber);
 415               		.loc 1 142 0 is_stmt 1
 416 0020 2181      		ldd r18,Z+1
 417               	.LVL34:
 418               	.LBB105:
 419               	.LBB106:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 420               		.loc 2 299 0
 421 0022 2093 E900 		sts 233,r18
 422               	.LBE106:
 423               	.LBE105:
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return Endpoint_Write_Stream_LE(Data, Length, NO_STREAM_CALLBACK);
 424               		.loc 1 143 0
 425 0026 40E0      		ldi r20,0
 426 0028 50E0      		ldi r21,0
 427               	.LVL35:
 428               	/* epilogue start */
 144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 429               		.loc 1 144 0
 430 002a 1F91      		pop r17
 431 002c 0F91      		pop r16
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return Endpoint_Write_Stream_LE(Data, Length, NO_STREAM_CALLBACK);
 432               		.loc 1 143 0
 433 002e 0C94 0000 		jmp Endpoint_Write_Stream_LE
 434               	.LVL36:
 435               	.L29:
 436               		.loc 1 144 0
 437 0032 82E0      		ldi r24,lo8(2)
 438               	.LVL37:
 439               	/* epilogue start */
 440 0034 1F91      		pop r17
 441 0036 0F91      		pop r16
 442 0038 0895      		ret
 443               		.cfi_endproc
 444               	.LFE70:
 446               		.section	.text.CDC_Device_SendByte,"ax",@progbits
 447               	.global	CDC_Device_SendByte
 449               	CDC_Device_SendByte:
 450               	.LFB71:
 145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** uint8_t CDC_Device_SendByte(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                             const uint8_t Data)
 148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 451               		.loc 1 148 0
 452               		.cfi_startproc
 453               	.LVL38:
 454 0000 CF93      		push r28
 455               	.LCFI8:
 456               		.cfi_def_cfa_offset 3
 457               		.cfi_offset 28, -2
 458               	/* prologue: function */
 459               	/* frame size = 0 */
 460               	/* stack size = 1 */
 461               	.L__stack_usage = 1
 462 0002 C62F      		mov r28,r22
 149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 463               		.loc 1 149 0
 464 0004 2EB3      		in r18,0x1e
 465 0006 2430      		cpi r18,lo8(4)
 466 0008 01F4      		brne .L38
 467               		.loc 1 149 0 is_stmt 0 discriminator 1
 468 000a FC01      		movw r30,r24
 469 000c 4785      		ldd r20,Z+15
 470 000e 5089      		ldd r21,Z+16
 471 0010 6189      		ldd r22,Z+17
 472 0012 7289      		ldd r23,Z+18
 473 0014 452B      		or r20,r21
 474 0016 462B      		or r20,r22
 475 0018 472B      		or r20,r23
 476 001a 01F0      		breq .L38
 150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpointNumber);
 477               		.loc 1 152 0 is_stmt 1
 478 001c 8181      		ldd r24,Z+1
 479               	.LVL39:
 480               	.LBB107:
 481               	.LBB108:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 482               		.loc 2 299 0
 483 001e 8093 E900 		sts 233,r24
 484               	.LBE108:
 485               	.LBE107:
 486               	.LBB109:
 487               	.LBB110:
 358:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 488               		.loc 2 358 0
 489 0022 8091 E800 		lds r24,232
 490               	.LVL40:
 491               	.LBE110:
 492               	.LBE109:
 153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 493               		.loc 1 154 0
 494 0026 85FF      		sbrs r24,5
 495 0028 00C0      		rjmp .L35
 496               	.LVL41:
 497               	.L36:
 498               	.LBB111:
 499               	.LBB112:
 562:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = Byte;
 500               		.loc 2 562 0
 501 002a C093 F100 		sts 241,r28
 502               	.LBE112:
 503               	.LBE111:
 155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		Endpoint_ClearIN();
 157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		uint8_t ErrorCode;
 159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  return ErrorCode;
 162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_Write_Byte(Data);
 165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return ENDPOINT_READYWAIT_NoError;
 504               		.loc 1 165 0
 505 002e 80E0      		ldi r24,0
 506 0030 00C0      		rjmp .L34
 507               	.LVL42:
 508               	.L35:
 509               	.LBB113:
 510               	.LBB114:
 511               	.LBB115:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 512               		.loc 2 454 0
 513 0032 8091 E800 		lds r24,232
 514 0036 8E77      		andi r24,lo8(126)
 515 0038 8093 E800 		sts 232,r24
 516               	.LVL43:
 517               	.LBE115:
 518               	.LBE114:
 160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 519               		.loc 1 160 0
 520 003c 0E94 0000 		call Endpoint_WaitUntilReady
 521               	.LVL44:
 522 0040 8823      		tst r24
 523 0042 01F0      		breq .L36
 524 0044 00C0      		rjmp .L34
 525               	.LVL45:
 526               	.L38:
 527               	.LBE113:
 150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
 528               		.loc 1 150 0
 529 0046 82E0      		ldi r24,lo8(2)
 530               	.LVL46:
 531               	.L34:
 532               	/* epilogue start */
 166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 533               		.loc 1 166 0
 534 0048 CF91      		pop r28
 535               	.LVL47:
 536 004a 0895      		ret
 537               		.cfi_endproc
 538               	.LFE71:
 540               		.section	.text.CDC_Device_putchar,"ax",@progbits
 542               	CDC_Device_putchar:
 543               	.LFB78:
 167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** uint8_t CDC_Device_Flush(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
 172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	uint8_t ErrorCode;
 174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpointNumber);
 176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_BytesInEndpoint()))
 178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_READYWAIT_NoError;
 179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	bool BankFull = !(Endpoint_IsReadWriteAllowed());
 181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_ClearIN();
 183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (BankFull)
 185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  return ErrorCode;
 188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		Endpoint_ClearIN();
 190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return ENDPOINT_READYWAIT_NoError;
 193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** uint16_t CDC_Device_BytesReceived(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return 0;
 199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpointNumber);
 201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (Endpoint_IsOUTReceived())
 203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (!(Endpoint_BytesInEndpoint()))
 205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		{
 206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			Endpoint_ClearOUT();
 207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			return 0;
 208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		}
 209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		else
 210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		{
 211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			return Endpoint_BytesInEndpoint();
 212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		}
 213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	else
 215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		return 0;
 217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** int16_t CDC_Device_ReceiveByte(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return -1;
 224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	int16_t ReceivedByte = -1;
 226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpointNumber);
 228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (Endpoint_IsOUTReceived())
 230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (Endpoint_BytesInEndpoint())
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  ReceivedByte = Endpoint_Read_Byte();
 233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (!(Endpoint_BytesInEndpoint()))
 235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  Endpoint_ClearOUT();
 236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return ReceivedByte;
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_SendControlLineStateChange(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return;
 245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.NotificationEndpointNumber);
 247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	USB_Request_Header_t Notification = (USB_Request_Header_t)
 249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		{
 250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			.bRequest      = NOTIF_SerialState,
 252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			.wValue        = 0,
 253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			.wIndex        = 0,
 254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			.wLength       = sizeof(CDCInterfaceInfo->State.ControlLineStates.DeviceToHost),
 255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		};
 256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_Write_Stream_LE(&CDCInterfaceInfo->State.ControlLineStates.DeviceToHost,
 259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                         sizeof(CDCInterfaceInfo->State.ControlLineStates.DeviceToHost),
 260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	                         NO_STREAM_CALLBACK);
 261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_ClearIN();
 262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_CreateStream(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                              FILE* const Stream)
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar, _FDEV_SETUP_RW);
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	fdev_set_udata(Stream, CDCInterfaceInfo);
 269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** void CDC_Device_CreateBlockingStream(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                                      FILE* const Stream)
 273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar_Blocking, _FDEV_SETUP_RW)
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	fdev_set_udata(Stream, CDCInterfaceInfo);
 276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** static int CDC_Device_putchar(char c,
 279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c ****                               FILE* Stream)
 280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 544               		.loc 1 280 0
 545               		.cfi_startproc
 546               	.LVL48:
 547               	/* prologue: function */
 548               	/* frame size = 0 */
 549               	/* stack size = 0 */
 550               	.L__stack_usage = 0
 551 0000 FB01      		movw r30,r22
 281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return CDC_Device_SendByte((USB_ClassInfo_CDC_Device_t*)fdev_get_udata(Stream), c) ? _FDEV_ERR : 0
 552               		.loc 1 281 0
 553 0002 682F      		mov r22,r24
 554               	.LVL49:
 555 0004 8485      		ldd r24,Z+12
 556 0006 9585      		ldd r25,Z+13
 557               	.LVL50:
 558 0008 0E94 0000 		call CDC_Device_SendByte
 559               	.LVL51:
 560 000c 21E0      		ldi r18,lo8(1)
 561 000e 30E0      		ldi r19,0
 562 0010 8111      		cpse r24,__zero_reg__
 563 0012 00C0      		rjmp .L43
 564 0014 20E0      		ldi r18,0
 565 0016 30E0      		ldi r19,0
 566               	.L43:
 282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 567               		.loc 1 282 0
 568 0018 8827      		clr r24
 569 001a 9927      		clr r25
 570 001c 821B      		sub r24,r18
 571 001e 930B      		sbc r25,r19
 572 0020 0895      		ret
 573               		.cfi_endproc
 574               	.LFE78:
 576               		.section	.text.CDC_Device_Flush,"ax",@progbits
 577               	.global	CDC_Device_Flush
 579               	CDC_Device_Flush:
 580               	.LFB72:
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 581               		.loc 1 169 0
 582               		.cfi_startproc
 583               	.LVL52:
 584               	/* prologue: function */
 585               	/* frame size = 0 */
 586               	/* stack size = 0 */
 587               	.L__stack_usage = 0
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 588               		.loc 1 170 0
 589 0000 2EB3      		in r18,0x1e
 590 0002 2430      		cpi r18,lo8(4)
 591 0004 01F4      		brne .L49
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 592               		.loc 1 170 0 is_stmt 0 discriminator 1
 593 0006 FC01      		movw r30,r24
 594 0008 4785      		ldd r20,Z+15
 595 000a 5089      		ldd r21,Z+16
 596 000c 6189      		ldd r22,Z+17
 597 000e 7289      		ldd r23,Z+18
 598 0010 452B      		or r20,r21
 599 0012 462B      		or r20,r22
 600 0014 472B      		or r20,r23
 601 0016 01F0      		breq .L49
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpointNumber);
 602               		.loc 1 175 0 is_stmt 1
 603 0018 8181      		ldd r24,Z+1
 604               	.LVL53:
 605               	.LBB116:
 606               	.LBB117:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 607               		.loc 2 299 0
 608 001a 8093 E900 		sts 233,r24
 609               	.LBE117:
 610               	.LBE116:
 611               	.LBB118:
 612               	.LBB119:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 613               		.loc 2 266 0
 614 001e 8091 F200 		lds r24,242
 615               	.LVL54:
 616               	.LBE119:
 617               	.LBE118:
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (!(Endpoint_BytesInEndpoint()))
 618               		.loc 1 177 0
 619 0022 8823      		tst r24
 620 0024 01F0      		breq .L51
 621               	.LBB120:
 622               	.LBB121:
 358:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 623               		.loc 2 358 0
 624 0026 9091 E800 		lds r25,232
 625               	.LVL55:
 626               	.LBE121:
 627               	.LBE120:
 628               	.LBB122:
 629               	.LBB123:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 630               		.loc 2 454 0
 631 002a 8091 E800 		lds r24,232
 632 002e 8E77      		andi r24,lo8(126)
 633 0030 8093 E800 		sts 232,r24
 634               	.LVL56:
 635               	.LBE123:
 636               	.LBE122:
 184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (BankFull)
 637               		.loc 1 184 0
 638 0034 95FD      		sbrc r25,5
 639 0036 00C0      		rjmp .L51
 186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 640               		.loc 1 186 0
 641 0038 0E94 0000 		call Endpoint_WaitUntilReady
 642               	.LVL57:
 643 003c 8111      		cpse r24,__zero_reg__
 644 003e 00C0      		rjmp .L45
 645               	.LBB124:
 646               	.LBB125:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 647               		.loc 2 454 0
 648 0040 8091 E800 		lds r24,232
 649               	.LVL58:
 650 0044 8E77      		andi r24,lo8(126)
 651 0046 8093 E800 		sts 232,r24
 652               	.L51:
 653 004a 80E0      		ldi r24,0
 654 004c 0895      		ret
 655               	.LVL59:
 656               	.L49:
 657               	.LBE125:
 658               	.LBE124:
 171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
 659               		.loc 1 171 0
 660 004e 82E0      		ldi r24,lo8(2)
 661               	.LVL60:
 662               	.L45:
 193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 663               		.loc 1 193 0
 664 0050 0895      		ret
 665               		.cfi_endproc
 666               	.LFE72:
 668               		.section	.text.CDC_Device_USBTask,"ax",@progbits
 669               	.global	CDC_Device_USBTask
 671               	CDC_Device_USBTask:
 672               	.LFB69:
 128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 673               		.loc 1 128 0
 674               		.cfi_startproc
 675               	.LVL61:
 676               	/* prologue: function */
 677               	/* frame size = 0 */
 678               	/* stack size = 0 */
 679               	.L__stack_usage = 0
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 680               		.loc 1 129 0
 681 0000 2EB3      		in r18,0x1e
 682 0002 2430      		cpi r18,lo8(4)
 683 0004 01F4      		brne .L52
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 684               		.loc 1 129 0 is_stmt 0 discriminator 1
 685 0006 FC01      		movw r30,r24
 686 0008 4785      		ldd r20,Z+15
 687 000a 5089      		ldd r21,Z+16
 688 000c 6189      		ldd r22,Z+17
 689 000e 7289      		ldd r23,Z+18
 690 0010 452B      		or r20,r21
 691 0012 462B      		or r20,r22
 692 0014 472B      		or r20,r23
 693 0016 01F0      		breq .L52
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	CDC_Device_Flush(CDCInterfaceInfo);
 694               		.loc 1 132 0 is_stmt 1
 695 0018 0C94 0000 		jmp CDC_Device_Flush
 696               	.LVL62:
 697               	.L52:
 698 001c 0895      		ret
 699               		.cfi_endproc
 700               	.LFE69:
 702               		.section	.text.CDC_Device_BytesReceived,"ax",@progbits
 703               	.global	CDC_Device_BytesReceived
 705               	CDC_Device_BytesReceived:
 706               	.LFB73:
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 707               		.loc 1 196 0
 708               		.cfi_startproc
 709               	.LVL63:
 710               	/* prologue: function */
 711               	/* frame size = 0 */
 712               	/* stack size = 0 */
 713               	.L__stack_usage = 0
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 714               		.loc 1 197 0
 715 0000 2EB3      		in r18,0x1e
 716 0002 2430      		cpi r18,lo8(4)
 717 0004 01F4      		brne .L68
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 718               		.loc 1 197 0 is_stmt 0 discriminator 1
 719 0006 FC01      		movw r30,r24
 720 0008 4785      		ldd r20,Z+15
 721 000a 5089      		ldd r21,Z+16
 722 000c 6189      		ldd r22,Z+17
 723 000e 7289      		ldd r23,Z+18
 724 0010 452B      		or r20,r21
 725 0012 462B      		or r20,r22
 726 0014 472B      		or r20,r23
 727 0016 01F0      		breq .L68
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpointNumber);
 728               		.loc 1 200 0 is_stmt 1
 729 0018 8581      		ldd r24,Z+5
 730               	.LVL64:
 731               	.LBB126:
 732               	.LBB127:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 733               		.loc 2 299 0
 734 001a 8093 E900 		sts 233,r24
 735               	.LBE127:
 736               	.LBE126:
 737               	.LBB128:
 738               	.LBB129:
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 739               		.loc 2 417 0
 740 001e 8091 E800 		lds r24,232
 741               	.LVL65:
 742               	.LBE129:
 743               	.LBE128:
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (Endpoint_IsOUTReceived())
 744               		.loc 1 202 0
 745 0022 82FF      		sbrs r24,2
 746 0024 00C0      		rjmp .L68
 747               	.LBB130:
 748               	.LBB131:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 749               		.loc 2 266 0
 750 0026 8091 F200 		lds r24,242
 751               	.LBE131:
 752               	.LBE130:
 204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (!(Endpoint_BytesInEndpoint()))
 753               		.loc 1 204 0
 754 002a 8111      		cpse r24,__zero_reg__
 755 002c 00C0      		rjmp .L61
 756               	.LBB132:
 757               	.LBB133:
 469:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 758               		.loc 2 469 0
 759 002e 8091 E800 		lds r24,232
 760 0032 8B77      		andi r24,lo8(123)
 761 0034 8093 E800 		sts 232,r24
 762               	.LVL66:
 763               	.L68:
 764               	.LBE133:
 765               	.LBE132:
 207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 			return 0;
 766               		.loc 1 207 0
 767 0038 80E0      		ldi r24,0
 768 003a 90E0      		ldi r25,0
 769 003c 0895      		ret
 770               	.LVL67:
 771               	.L61:
 772               	.LBB134:
 773               	.LBB135:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 774               		.loc 2 266 0
 775 003e 8091 F200 		lds r24,242
 776 0042 90E0      		ldi r25,0
 777               	.LBE135:
 778               	.LBE134:
 218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 779               		.loc 1 218 0
 780 0044 0895      		ret
 781               		.cfi_endproc
 782               	.LFE73:
 784               		.section	.text.CDC_Device_ReceiveByte,"ax",@progbits
 785               	.global	CDC_Device_ReceiveByte
 787               	CDC_Device_ReceiveByte:
 788               	.LFB74:
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 789               		.loc 1 221 0
 790               		.cfi_startproc
 791               	.LVL68:
 792               	/* prologue: function */
 793               	/* frame size = 0 */
 794               	/* stack size = 0 */
 795               	.L__stack_usage = 0
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 796               		.loc 1 222 0
 797 0000 2EB3      		in r18,0x1e
 798 0002 2430      		cpi r18,lo8(4)
 799 0004 01F0      		breq .L70
 800               	.LVL69:
 801               	.L72:
 223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return -1;
 802               		.loc 1 223 0
 803 0006 8FEF      		ldi r24,lo8(-1)
 804 0008 9FEF      		ldi r25,lo8(-1)
 805 000a 0895      		ret
 806               	.LVL70:
 807               	.L70:
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 808               		.loc 1 222 0 discriminator 1
 809 000c FC01      		movw r30,r24
 810 000e 4785      		ldd r20,Z+15
 811 0010 5089      		ldd r21,Z+16
 812 0012 6189      		ldd r22,Z+17
 813 0014 7289      		ldd r23,Z+18
 814 0016 452B      		or r20,r21
 815 0018 462B      		or r20,r22
 816 001a 472B      		or r20,r23
 817 001c 01F0      		breq .L72
 818               	.LVL71:
 227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpointNumber);
 819               		.loc 1 227 0
 820 001e 8581      		ldd r24,Z+5
 821               	.LVL72:
 822               	.LBB136:
 823               	.LBB137:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 824               		.loc 2 299 0
 825 0020 8093 E900 		sts 233,r24
 826               	.LBE137:
 827               	.LBE136:
 828               	.LBB138:
 829               	.LBB139:
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 830               		.loc 2 417 0
 831 0024 8091 E800 		lds r24,232
 832               	.LVL73:
 833               	.LBE139:
 834               	.LBE138:
 229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (Endpoint_IsOUTReceived())
 835               		.loc 1 229 0
 836 0028 82FF      		sbrs r24,2
 837 002a 00C0      		rjmp .L72
 838               	.LBB140:
 839               	.LBB141:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 840               		.loc 2 266 0
 841 002c 8091 F200 		lds r24,242
 842               	.LBE141:
 843               	.LBE140:
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (Endpoint_BytesInEndpoint())
 844               		.loc 1 231 0
 845 0030 8823      		tst r24
 846 0032 01F0      		breq .L74
 847               	.LBB142:
 848               	.LBB143:
 550:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEDATX;
 849               		.loc 2 550 0
 850 0034 2091 F100 		lds r18,241
 851               	.LBE143:
 852               	.LBE142:
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  ReceivedByte = Endpoint_Read_Byte();
 853               		.loc 1 232 0
 854 0038 30E0      		ldi r19,0
 855               	.LVL74:
 856 003a 00C0      		rjmp .L73
 857               	.LVL75:
 858               	.L74:
 225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	int16_t ReceivedByte = -1;
 859               		.loc 1 225 0
 860 003c 2FEF      		ldi r18,lo8(-1)
 861 003e 3FEF      		ldi r19,lo8(-1)
 862               	.LVL76:
 863               	.L73:
 864               	.LBB144:
 865               	.LBB145:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 866               		.loc 2 266 0
 867 0040 8091 F200 		lds r24,242
 868               	.LBE145:
 869               	.LBE144:
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (!(Endpoint_BytesInEndpoint()))
 870               		.loc 1 234 0
 871 0044 8111      		cpse r24,__zero_reg__
 872 0046 00C0      		rjmp .L75
 873               	.LBB146:
 874               	.LBB147:
 469:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 875               		.loc 2 469 0
 876 0048 8091 E800 		lds r24,232
 877 004c 8B77      		andi r24,lo8(123)
 878 004e 8093 E800 		sts 232,r24
 879               	.LVL77:
 880               	.L75:
 881               	.LBE147:
 882               	.LBE146:
 883 0052 C901      		movw r24,r18
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 884               		.loc 1 239 0
 885 0054 0895      		ret
 886               		.cfi_endproc
 887               	.LFE74:
 889               		.section	.text.CDC_Device_getchar,"ax",@progbits
 891               	CDC_Device_getchar:
 892               	.LFB79:
 283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** static int CDC_Device_getchar(FILE* Stream)
 285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 893               		.loc 1 285 0
 894               		.cfi_startproc
 895               	.LVL78:
 896               	/* prologue: function */
 897               	/* frame size = 0 */
 898               	/* stack size = 0 */
 899               	.L__stack_usage = 0
 286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	int16_t ReceivedByte = CDC_Device_ReceiveByte((USB_ClassInfo_CDC_Device_t*)fdev_get_udata(Stream))
 900               		.loc 1 286 0
 901 0000 FC01      		movw r30,r24
 902 0002 8485      		ldd r24,Z+12
 903 0004 9585      		ldd r25,Z+13
 904               	.LVL79:
 905 0006 0E94 0000 		call CDC_Device_ReceiveByte
 906               	.LVL80:
 287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if (ReceivedByte < 0)
 907               		.loc 1 288 0
 908 000a 97FF      		sbrs r25,7
 909 000c 00C0      		rjmp .L83
 289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	  return _FDEV_EOF;
 910               		.loc 1 289 0
 911 000e 8EEF      		ldi r24,lo8(-2)
 912               	.LVL81:
 913 0010 9FEF      		ldi r25,lo8(-1)
 914               	.L83:
 290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return ReceivedByte;
 292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 915               		.loc 1 292 0
 916 0012 0895      		ret
 917               		.cfi_endproc
 918               	.LFE79:
 920               		.section	.text.CDC_Device_getchar_Blocking,"ax",@progbits
 922               	CDC_Device_getchar_Blocking:
 923               	.LFB80:
 293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** static int CDC_Device_getchar_Blocking(FILE* Stream)
 295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 924               		.loc 1 295 0
 925               		.cfi_startproc
 926               	.LVL82:
 927 0000 CF93      		push r28
 928               	.LCFI9:
 929               		.cfi_def_cfa_offset 3
 930               		.cfi_offset 28, -2
 931 0002 DF93      		push r29
 932               	.LCFI10:
 933               		.cfi_def_cfa_offset 4
 934               		.cfi_offset 29, -3
 935               	/* prologue: function */
 936               	/* frame size = 0 */
 937               	/* stack size = 2 */
 938               	.L__stack_usage = 2
 939 0004 EC01      		movw r28,r24
 940               	.LVL83:
 941               	.L86:
 296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	int16_t ReceivedByte;
 297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	while ((ReceivedByte = CDC_Device_ReceiveByte((USB_ClassInfo_CDC_Device_t*)fdev_get_udata(Stream))
 942               		.loc 1 298 0 discriminator 1
 943 0006 8C85      		ldd r24,Y+12
 944 0008 9D85      		ldd r25,Y+13
 945 000a 0E94 0000 		call CDC_Device_ReceiveByte
 946               	.LVL84:
 947 000e 97FF      		sbrs r25,7
 948 0010 00C0      		rjmp .L87
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	{
 300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		if (USB_DeviceState == DEVICE_STATE_Unattached)
 949               		.loc 1 300 0
 950 0012 8EB3      		in r24,0x1e
 951               	.LVL85:
 952 0014 8823      		tst r24
 953 0016 01F0      		breq .L89
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  return _FDEV_EOF;
 302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	
 303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		CDC_Device_USBTask((USB_ClassInfo_CDC_Device_t*)fdev_get_udata(Stream));
 954               		.loc 1 303 0
 955 0018 8C85      		ldd r24,Y+12
 956 001a 9D85      		ldd r25,Y+13
 957 001c 0E94 0000 		call CDC_Device_USBTask
 958               	.LVL86:
 304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		USB_USBTask();	
 959               		.loc 1 304 0
 960 0020 0E94 0000 		call USB_USBTask
 961               	.LVL87:
 962 0024 00C0      		rjmp .L86
 963               	.L89:
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 		  return _FDEV_EOF;
 964               		.loc 1 301 0
 965 0026 8EEF      		ldi r24,lo8(-2)
 966 0028 9FEF      		ldi r25,lo8(-1)
 967               	.L87:
 968               	/* epilogue start */
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	}
 306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 
 307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	return ReceivedByte;
 308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 969               		.loc 1 308 0
 970 002a DF91      		pop r29
 971 002c CF91      		pop r28
 972               	.LVL88:
 973 002e 0895      		ret
 974               		.cfi_endproc
 975               	.LFE80:
 977               		.section	.rodata
 978               	.LC0:
 979 0000 A1        		.byte	-95
 980 0001 20        		.byte	32
 981 0002 0000      		.word	0
 982 0004 0000      		.word	0
 983 0006 0100      		.word	1
 984               		.section	.text.CDC_Device_SendControlLineStateChange,"ax",@progbits
 985               	.global	CDC_Device_SendControlLineStateChange
 987               	CDC_Device_SendControlLineStateChange:
 988               	.LFB75:
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 989               		.loc 1 242 0
 990               		.cfi_startproc
 991               	.LVL89:
 992 0000 0F93      		push r16
 993               	.LCFI11:
 994               		.cfi_def_cfa_offset 3
 995               		.cfi_offset 16, -2
 996 0002 1F93      		push r17
 997               	.LCFI12:
 998               		.cfi_def_cfa_offset 4
 999               		.cfi_offset 17, -3
 1000 0004 CF93      		push r28
 1001               	.LCFI13:
 1002               		.cfi_def_cfa_offset 5
 1003               		.cfi_offset 28, -4
 1004 0006 DF93      		push r29
 1005               	.LCFI14:
 1006               		.cfi_def_cfa_offset 6
 1007               		.cfi_offset 29, -5
 1008 0008 CDB7      		in r28,__SP_L__
 1009 000a DEB7      		in r29,__SP_H__
 1010               	.LCFI15:
 1011               		.cfi_def_cfa_register 28
 1012 000c 2897      		sbiw r28,8
 1013               	.LCFI16:
 1014               		.cfi_def_cfa_offset 14
 1015 000e 0FB6      		in __tmp_reg__,__SREG__
 1016 0010 F894      		cli
 1017 0012 DEBF      		out __SP_H__,r29
 1018 0014 0FBE      		out __SREG__,__tmp_reg__
 1019 0016 CDBF      		out __SP_L__,r28
 1020               	/* prologue: function */
 1021               	/* frame size = 8 */
 1022               	/* stack size = 12 */
 1023               	.L__stack_usage = 12
 1024 0018 8C01      		movw r16,r24
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 1025               		.loc 1 243 0
 1026 001a 8EB3      		in r24,0x1e
 1027               	.LVL90:
 1028 001c 8430      		cpi r24,lo8(4)
 1029 001e 01F4      		brne .L90
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) || !(CDCInterfaceInfo->State.LineEncoding.BaudRat
 1030               		.loc 1 243 0 is_stmt 0 discriminator 1
 1031 0020 F801      		movw r30,r16
 1032 0022 4785      		ldd r20,Z+15
 1033 0024 5089      		ldd r21,Z+16
 1034 0026 6189      		ldd r22,Z+17
 1035 0028 7289      		ldd r23,Z+18
 1036 002a 452B      		or r20,r21
 1037 002c 462B      		or r20,r22
 1038 002e 472B      		or r20,r23
 1039 0030 01F0      		breq .L90
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.NotificationEndpointNumber);
 1040               		.loc 1 246 0 is_stmt 1
 1041 0032 8185      		ldd r24,Z+9
 1042               	.LVL91:
 1043               	.LBB148:
 1044               	.LBB149:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1045               		.loc 2 299 0
 1046 0034 8093 E900 		sts 233,r24
 1047               	.LBE149:
 1048               	.LBE148:
 248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	USB_Request_Header_t Notification = (USB_Request_Header_t)
 1049               		.loc 1 248 0
 1050 0038 88E0      		ldi r24,lo8(8)
 1051               	.LVL92:
 1052 003a E0E0      		ldi r30,lo8(.LC0)
 1053 003c F0E0      		ldi r31,hi8(.LC0)
 1054 003e DE01      		movw r26,r28
 1055 0040 1196      		adiw r26,1
 1056               		0:
 1057 0042 0190      		ld r0,Z+
 1058 0044 0D92      		st X+,r0
 1059 0046 8A95      		dec r24
 1060 0048 01F4      		brne 0b
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 1061               		.loc 1 257 0
 1062 004a 40E0      		ldi r20,0
 1063 004c 50E0      		ldi r21,0
 1064 004e 68E0      		ldi r22,lo8(8)
 1065 0050 70E0      		ldi r23,0
 1066 0052 CE01      		movw r24,r28
 1067 0054 0196      		adiw r24,1
 1068 0056 0E94 0000 		call Endpoint_Write_Stream_LE
 1069               	.LVL93:
 258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	Endpoint_Write_Stream_LE(&CDCInterfaceInfo->State.ControlLineStates.DeviceToHost,
 1070               		.loc 1 258 0
 1071 005a 40E0      		ldi r20,0
 1072 005c 50E0      		ldi r21,0
 1073 005e 61E0      		ldi r22,lo8(1)
 1074 0060 70E0      		ldi r23,0
 1075 0062 C801      		movw r24,r16
 1076 0064 0E96      		adiw r24,14
 1077 0066 0E94 0000 		call Endpoint_Write_Stream_LE
 1078               	.LVL94:
 1079               	.LBB150:
 1080               	.LBB151:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1081               		.loc 2 454 0
 1082 006a 8091 E800 		lds r24,232
 1083 006e 8E77      		andi r24,lo8(126)
 1084 0070 8093 E800 		sts 232,r24
 1085               	.L90:
 1086               	/* epilogue start */
 1087               	.LBE151:
 1088               	.LBE150:
 262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** }
 1089               		.loc 1 262 0
 1090 0074 2896      		adiw r28,8
 1091 0076 0FB6      		in __tmp_reg__,__SREG__
 1092 0078 F894      		cli
 1093 007a DEBF      		out __SP_H__,r29
 1094 007c 0FBE      		out __SREG__,__tmp_reg__
 1095 007e CDBF      		out __SP_L__,r28
 1096 0080 DF91      		pop r29
 1097 0082 CF91      		pop r28
 1098 0084 1F91      		pop r17
 1099 0086 0F91      		pop r16
 1100               	.LVL95:
 1101 0088 0895      		ret
 1102               		.cfi_endproc
 1103               	.LFE75:
 1105               		.section	.text.CDC_Device_CreateStream,"ax",@progbits
 1106               	.global	CDC_Device_CreateStream
 1108               	CDC_Device_CreateStream:
 1109               	.LFB76:
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 1110               		.loc 1 266 0
 1111               		.cfi_startproc
 1112               	.LVL96:
 1113               	/* prologue: function */
 1114               	/* frame size = 0 */
 1115               	/* stack size = 0 */
 1116               	.L__stack_usage = 0
 1117 0000 FB01      		movw r30,r22
 267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar, _FDEV_SETUP_RW);
 1118               		.loc 1 267 0
 1119 0002 2EE0      		ldi r18,lo8(14)
 1120 0004 DB01      		movw r26,r22
 1121               		0:
 1122 0006 1D92      		st X+,__zero_reg__
 1123 0008 2A95      		dec r18
 1124 000a 01F4      		brne 0b
 1125 000c 23E0      		ldi r18,lo8(3)
 1126 000e 2383      		std Z+3,r18
 1127 0010 20E0      		ldi r18,lo8(gs(CDC_Device_putchar))
 1128 0012 30E0      		ldi r19,hi8(gs(CDC_Device_putchar))
 1129 0014 3187      		std Z+9,r19
 1130 0016 2087      		std Z+8,r18
 1131 0018 20E0      		ldi r18,lo8(gs(CDC_Device_getchar))
 1132 001a 30E0      		ldi r19,hi8(gs(CDC_Device_getchar))
 1133 001c 3387      		std Z+11,r19
 1134 001e 2287      		std Z+10,r18
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	fdev_set_udata(Stream, CDCInterfaceInfo);
 1135               		.loc 1 268 0
 1136 0020 9587      		std Z+13,r25
 1137 0022 8487      		std Z+12,r24
 1138 0024 0895      		ret
 1139               		.cfi_endproc
 1140               	.LFE76:
 1142               		.section	.text.CDC_Device_CreateBlockingStream,"ax",@progbits
 1143               	.global	CDC_Device_CreateBlockingStream
 1145               	CDC_Device_CreateBlockingStream:
 1146               	.LFB77:
 273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** {
 1147               		.loc 1 273 0
 1148               		.cfi_startproc
 1149               	.LVL97:
 1150               	/* prologue: function */
 1151               	/* frame size = 0 */
 1152               	/* stack size = 0 */
 1153               	.L__stack_usage = 0
 1154 0000 FB01      		movw r30,r22
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar_Blocking, _FDEV_SETUP_RW)
 1155               		.loc 1 274 0
 1156 0002 2EE0      		ldi r18,lo8(14)
 1157 0004 DB01      		movw r26,r22
 1158               		0:
 1159 0006 1D92      		st X+,__zero_reg__
 1160 0008 2A95      		dec r18
 1161 000a 01F4      		brne 0b
 1162 000c 23E0      		ldi r18,lo8(3)
 1163 000e 2383      		std Z+3,r18
 1164 0010 20E0      		ldi r18,lo8(gs(CDC_Device_putchar))
 1165 0012 30E0      		ldi r19,hi8(gs(CDC_Device_putchar))
 1166 0014 3187      		std Z+9,r19
 1167 0016 2087      		std Z+8,r18
 1168 0018 20E0      		ldi r18,lo8(gs(CDC_Device_getchar_Blocking))
 1169 001a 30E0      		ldi r19,hi8(gs(CDC_Device_getchar_Blocking))
 1170 001c 3387      		std Z+11,r19
 1171 001e 2287      		std Z+10,r18
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.c **** 	fdev_set_udata(Stream, CDCInterfaceInfo);
 1172               		.loc 1 275 0
 1173 0020 9587      		std Z+13,r25
 1174 0022 8487      		std Z+12,r24
 1175 0024 0895      		ret
 1176               		.cfi_endproc
 1177               	.LFE77:
 1179               		.text
 1180               	.Letext0:
 1181               		.file 3 "/usr/lib/avr/include/stdint.h"
 1182               		.file 4 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/Strea
 1183               		.file 5 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Device.h"
 1184               		.file 6 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/StdRe
 1185               		.file 7 "/usr/lib/avr/include/stdio.h"
 1186               		.file 8 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/CDC.h"
 1187               		.file 9 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 CDC.c
     /tmp/cch4aWAv.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cch4aWAv.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cch4aWAv.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cch4aWAv.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cch4aWAv.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cch4aWAv.s:13     .text.CDC_Device_Event_Stub:0000000000000000 CDC_Device_Event_Stub
     /tmp/cch4aWAv.s:13     .text.CDC_Device_Event_Stub:0000000000000000 EVENT_CDC_Device_LineEncodingChanged
     /tmp/cch4aWAv.s:13     .text.CDC_Device_Event_Stub:0000000000000000 EVENT_CDC_Device_ControLineStateChanged
     /tmp/cch4aWAv.s:13     .text.CDC_Device_Event_Stub:0000000000000000 EVENT_CDC_Device_BreakSent
     /tmp/cch4aWAv.s:35     .text.CDC_Device_ProcessControlRequest:0000000000000000 CDC_Device_ProcessControlRequest
     /tmp/cch4aWAv.s:212    .text.CDC_Device_ConfigureEndpoints:0000000000000000 CDC_Device_ConfigureEndpoints
     /tmp/cch4aWAv.s:380    .text.CDC_Device_SendString:0000000000000000 CDC_Device_SendString
     /tmp/cch4aWAv.s:449    .text.CDC_Device_SendByte:0000000000000000 CDC_Device_SendByte
     /tmp/cch4aWAv.s:542    .text.CDC_Device_putchar:0000000000000000 CDC_Device_putchar
     /tmp/cch4aWAv.s:579    .text.CDC_Device_Flush:0000000000000000 CDC_Device_Flush
     /tmp/cch4aWAv.s:671    .text.CDC_Device_USBTask:0000000000000000 CDC_Device_USBTask
     /tmp/cch4aWAv.s:705    .text.CDC_Device_BytesReceived:0000000000000000 CDC_Device_BytesReceived
     /tmp/cch4aWAv.s:787    .text.CDC_Device_ReceiveByte:0000000000000000 CDC_Device_ReceiveByte
     /tmp/cch4aWAv.s:891    .text.CDC_Device_getchar:0000000000000000 CDC_Device_getchar
     /tmp/cch4aWAv.s:922    .text.CDC_Device_getchar_Blocking:0000000000000000 CDC_Device_getchar_Blocking
     /tmp/cch4aWAv.s:987    .text.CDC_Device_SendControlLineStateChange:0000000000000000 CDC_Device_SendControlLineStateChange
     /tmp/cch4aWAv.s:1108   .text.CDC_Device_CreateStream:0000000000000000 CDC_Device_CreateStream
     /tmp/cch4aWAv.s:1145   .text.CDC_Device_CreateBlockingStream:0000000000000000 CDC_Device_CreateBlockingStream

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_Read_Control_Stream_LE
Endpoint_ClearStatusStage
Endpoint_BytesToEPSizeMaskDynamic
Endpoint_ConfigureEndpoint_Prv
Endpoint_Write_Stream_LE
Endpoint_WaitUntilReady
USB_USBTask
__do_copy_data
