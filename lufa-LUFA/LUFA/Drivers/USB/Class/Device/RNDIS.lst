   1               		.file	"RNDIS.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	RNDIS_Device_ProcessControlRequest
  13               	RNDIS_Device_ProcessControlRequest:
  14               	.LFB65:
  15               		.file 1 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c"
   1:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
   2:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****              LUFA Library
   3:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****      Copyright (C) Dean Camera, 2010.
   4:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****               
   5:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   dean [at] fourwalledcubicle [dot] com
   6:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****       www.fourwalledcubicle.com
   7:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
   8:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
   9:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
  10:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  12:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Permission to use, copy, modify, distribute, and sell this 
  13:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software and its documentation for any purpose is hereby granted
  14:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   without fee, provided that the above copyright notice appear in 
  15:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   all copies and that both that the copyright notice and this
  16:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   permission notice and warranty disclaimer appear in supporting 
  17:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   documentation, and that the name of the author not be used in 
  18:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   advertising or publicity pertaining to distribution of the 
  19:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software without specific, written prior permission.
  20:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  21:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   The author disclaim all warranties with regard to this
  22:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software, including all implied warranties of merchantability
  23:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   and fitness.  In no event shall the author be liable for any
  24:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   special, indirect or consequential damages or any damages
  25:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   in an action of contract, negligence or other tortious action,
  27:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   arising out of or in connection with the use or performance of
  28:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****   this software.
  29:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
  30:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  31:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "../../HighLevel/USBMode.h"
  33:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #if defined(USB_CAN_BE_DEVICE)
  34:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  35:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_CLASS_DEVICE_C
  36:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "RNDIS.h"
  38:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  39:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  40:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  41:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_SUPPORTED_LIST,
  42:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_PHYSICAL_MEDIUM,
  43:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_HARDWARE_STATUS,
  44:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_SUPPORTED,
  45:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_IN_USE,
  46:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_FRAME_SIZE,
  47:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_TOTAL_SIZE,
  48:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_LINK_SPEED,
  49:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_TRANSMIT_BLOCK_SIZE,
  50:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RECEIVE_BLOCK_SIZE,
  51:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_VENDOR_ID,
  52:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_VENDOR_DESCRIPTION,
  53:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_CURRENT_PACKET_FILTER,
  54:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_TOTAL_SIZE,
  55:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_CONNECT_STATUS,
  56:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_XMIT_OK,
  57:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_OK,
  58:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_XMIT_ERROR,
  59:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_ERROR,
  60:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_NO_BUFFER,
  61:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_PERMANENT_ADDRESS,
  62:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_CURRENT_ADDRESS,
  63:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_MULTICAST_LIST,
  64:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_MAXIMUM_LIST_SIZE,
  65:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_RCV_ERROR_ALIGNMENT,
  66:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_XMIT_ONE_COLLISION,
  67:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_XMIT_MORE_COLLISIONS,
  68:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	};
  69:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  70:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  71:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
  16               		.loc 1 71 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 16, -2
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 17, -3
  27 0004 CF93      		push r28
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 28, -4
  31 0006 DF93      		push r29
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 29, -5
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 4 */
  38               	.L__stack_usage = 4
  39 0008 EC01      		movw r28,r24
  40               	.LBB55:
  41               	.LBB56:
  42               		.file 2 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h"
   1:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
   2:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****              LUFA Library
   3:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****      Copyright (C) Dean Camera, 2010.
   4:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****               
   5:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   dean [at] fourwalledcubicle [dot] com
   6:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****       www.fourwalledcubicle.com
   7:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
   8:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
   9:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
  10:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  12:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Permission to use, copy, modify, distribute, and sell this 
  13:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software and its documentation for any purpose is hereby granted
  14:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   without fee, provided that the above copyright notice appear in 
  15:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   all copies and that both that the copyright notice and this
  16:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   permission notice and warranty disclaimer appear in supporting 
  17:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   documentation, and that the name of the author not be used in 
  18:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   advertising or publicity pertaining to distribution of the 
  19:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software without specific, written prior permission.
  20:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  21:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   The author disclaim all warranties with regard to this
  22:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software, including all implied warranties of merchantability
  23:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   and fitness.  In no event shall the author be liable for any
  24:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   special, indirect or consequential damages or any damages
  25:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   in an action of contract, negligence or other tortious action,
  27:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   arising out of or in connection with the use or performance of
  28:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   this software.
  29:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
  30:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  31:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \file
  32:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \brief USB device endpoint management definitions.
  33:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  34:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  This file contains structures, function prototypes and macros related to the management of the 
  35:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  data endpoints when the library is initialized in USB device mode.
  36:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  37:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  40:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  41:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_USB
  42:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointManagement Endpoint Management
  43:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  44:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  45:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  46:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  send/receive functions for various data types.
  47:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  48:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @{
  49:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  50:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  51:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointRW Endpoint Data Reading and Writing
  52:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  53:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  54:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  55:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  
  56:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  57:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPrimitiveRW Read/Write of Primitive Data Types
  58:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  59:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  60:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  from and to endpoints.
  61:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  62:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  63:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  64:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointStreamRW Read/Write of Multi-Byte Streams
  65:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  66:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of data strea
  67:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  and to endpoints.
  68:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  69:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  70:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointPacketManagement Endpoint Packet Management
  71:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  72:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  73:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  74:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  75:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #ifndef __ENDPOINT_H__
  76:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #define __ENDPOINT_H__
  77:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  78:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Includes: */
  79:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/io.h>
  80:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/pgmspace.h>
  81:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/eeprom.h>
  82:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <stdbool.h>
  83:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  84:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../../../Common/Common.h"
  85:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../HighLevel/USBTask.h"
  86:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "USBInterrupt.h"
  87:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  88:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
  89:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#include "../HighLevel/StreamCallbacks.h"
  90:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  91:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Enable C linkage for C++ Compilers: */
  93:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if defined(__cplusplus)
  94:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			extern "C" {
  95:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  96:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  97:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Preprocessor Checks: */
  98:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  99:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
 100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
 101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Public Interface - May be used in end-application: */
 103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
 104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the OUT direction - i.e. data flows from host to device.
 106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_OUT                      (0 << EPDIR)
 108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the IN direction - i.e. data flows from device to host.
 111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_IN                       (1 << EPDIR)
 113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank at the one time.
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_SINGLE                  (0 << EPBK0)
 120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  accesses the second bank.
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_DOUBLE                  (1 << EPBK0)
 127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint address for the default control endpoint, which always resides in address 0. This i
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  defined for convenience to give more readable code when used with the endpoint macros.
 130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_CONTROLEP                    0
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  value in the device descriptor. Not available if the FIXED_CONTROL_ENDPOINT_SIZE token is d
 136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 */
 137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE   8
 138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint number mask, for masking against endpoint addresses to retrieve the endpoint's
 141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  numerical address in the device.
 142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPNUM_MASK                   0x07
 144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint direction mask, for masking against endpoint addresses to retrieve the endpoint's
 146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction for comparing with the ENDPOINT_DESCRIPTOR_DIR_* masks.
 147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPDIR_MASK                   0x80
 149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint bank size mask, for masking against endpoint addresses to retrieve the endpoint's
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank size in the device.
 152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPSIZE_MASK                  0x7F
 154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Maximum size in bytes of a given endpoint.
 156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_MAX_SIZE(n)                  _ENDPOINT_GET_MAXSIZE(n)
 160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates if the given endpoint supports double banking.
 162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DOUBLEBANK_SUPPORTED(n)      _ENDPOINT_GET_DOUBLEBANK(n)
 166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(CONTROL_ONLY_DEVICE)
 168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 */
 173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      7
 174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      5
 176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS          1
 179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Enums: */
 182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   transfer by the host or device.
 191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   waiting for the endpoint to become ready.
 194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   no USB endpoint traffic can occur until th
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   has resumed.
 198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   within the software timeout period set by 
 201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Stream_* functions.
 206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_Stream_RW_ErrorCodes_t
 210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_EndpointStalled    = 1, /**< The endpoint was stalled during the stream
 213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   transfer by the host or device.
 214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   the transfer.
 217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   no USB endpoint traffic can occur until the bus
 220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   has resumed.
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_Timeout            = 4, /**< The host failed to accept or send the next packe
 223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   within the software timeout period set by the
 224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   \ref USB_STREAM_TIMEOUT_MS macro.
 225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_CallbackAborted    = 5, /**< Indicates that the stream's callback function
 227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                               *   aborted the transfer early.
 228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Control_Stream_* functions..
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_ControlStream_RW_ErrorCodes_t
 236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_HostAborted        = 1, /**< The aborted the transfer prematurely. */
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   the transfer.
 241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   no USB endpoint traffic can occur until the bus
 244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   has resumed.
 245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        of the selected AVR model.
 253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCX;
 263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_4_AVR)
 264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_2_AVR)
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  been manipulated.
 273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Index of the currently selected endpoint.
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return ENDPOINT_CONTROLEP;
 283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  number (and discarding the endpoint direction bit).
 289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint.
 292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  In and Out pointers to the bank's contents.
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 309:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber)
 310:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 311:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = (1 << EndpointNumber);
 312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = 0;
 313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 315:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 316:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and from a host.
 317:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 318:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 319:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 320:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 321:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void)
 322:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 323:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << EPEN);
 324:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 325:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 326:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 327:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to and from a host.
 328:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 330:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void)
 331:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 332:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX &= ~(1 << EPEN);
 333:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 334:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 335:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 336:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 337:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 * \return Boolean True if the currently selected endpoint is enabled, false otherwise.
 338:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 339:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 340:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void)
 341:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 342:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 343:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 344:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 346:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 347:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 348:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 349:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction and the endpoint bank is full.
 350:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 351:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 352:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 353:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint may be read from or written to, depe
 354:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 355:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 356:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 357:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 358:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 359:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 360:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 361:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is configured.
 362:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 363:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint has been configured, false otherwise
 364:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 365:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 366:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void)
 367:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 368:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 369:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 370:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 371:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 372:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 373:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  masking the return value against (1 << {Endpoint Number}).
 374:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 375:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 376:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 377:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 378:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 379:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 380:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEINT;
 381:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 382:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 383:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 384:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoints).
 385:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 386:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 387:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 388:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the specified endpoint has interrupted, false otherwise.
 389:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 390:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 391:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 392:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 393:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINT & (1 << EndpointNumber)) ? true : false);
 394:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 395:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 396:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected IN endpoint is ready for a new packet.
 397:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 398:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 399:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 400:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the current endpoint is ready for an IN packet, false otherwise.
 401:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 402:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 403:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void)
 404:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 405:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI))  ? true : false);
 406:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 407:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 408:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected OUT endpoint has received new packet.
 409:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 410:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 411:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 412:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if current endpoint is has received an OUT packet, false otherwise.
 413:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 414:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 415:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 416:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 418:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 419:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 420:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 421:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 422:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 423:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 424:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the selected endpoint has received a SETUP packet, false otherwise.
 425:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 426:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 427:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 428:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 429:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  43               		.loc 2 429 0
  44 000a 8091 E800 		lds r24,232
  45               	.LVL1:
  46               	.LBE56:
  47               	.LBE55:
  72:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_IsSETUPReceived()))
  48               		.loc 1 72 0
  49 000e 83FF      		sbrs r24,3
  50 0010 00C0      		rjmp .L1
  73:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  74:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  
  75:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  51               		.loc 1 75 0
  52 0012 8881      		ld r24,Y
  53 0014 90E0      		ldi r25,0
  54 0016 2091 0000 		lds r18,USB_ControlRequest+4
  55 001a 3091 0000 		lds r19,USB_ControlRequest+4+1
  56 001e 2817      		cp r18,r24
  57 0020 3907      		cpc r19,r25
  58 0022 01F0      		breq .+2
  59 0024 00C0      		rjmp .L1
  76:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  77:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  78:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (USB_ControlRequest.bRequest)
  60               		.loc 1 78 0
  61 0026 8091 0000 		lds r24,USB_ControlRequest+1
  62 002a 8823      		tst r24
  63 002c 01F0      		breq .L3
  64 002e 8130      		cpi r24,lo8(1)
  65 0030 01F4      		brne .+2
  66 0032 00C0      		rjmp .L4
  67 0034 00C0      		rjmp .L1
  68               	.L3:
  79:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  80:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REQ_SendEncapsulatedCommand:
  81:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  69               		.loc 1 81 0
  70 0036 8091 0000 		lds r24,USB_ControlRequest
  71 003a 8132      		cpi r24,lo8(33)
  72 003c 01F0      		breq .+2
  73 003e 00C0      		rjmp .L1
  74               	.LBB57:
  75               	.LBB58:
 430:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 431:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 432:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 433:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint for the next packet.
 434:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 435:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 436:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 437:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This is not applicable for non CONTROL type endpoints. 
 438:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 439:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 440:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void)
 441:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
  76               		.loc 2 442 0
  77 0040 8091 E800 		lds r24,232
  78 0044 877F      		andi r24,lo8(-9)
  79 0046 8093 E800 		sts 232,r24
  80               	.LBE58:
  81               	.LBE57:
  82:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  83:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
  84:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  85:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, USB_ControlReques
  82               		.loc 1 85 0
  83 004a 6091 0000 		lds r22,USB_ControlRequest+6
  84 004e 7091 0000 		lds r23,USB_ControlRequest+6+1
  85 0052 CE01      		movw r24,r28
  86 0054 4596      		adiw r24,21
  87 0056 0E94 0000 		call Endpoint_Read_Control_Stream_LE
  88               	.LVL2:
  89               	.LBB59:
  90               	.LBB60:
  86:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  87:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearIN();
  88:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
  89:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
  90:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
  91:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REQ_GetEncapsulatedResponse:
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  93:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  94:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
  95:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  96:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RND
  97:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  98:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				if (!(MessageHeader->MessageLength))
  99:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				{
 100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength = 1;
 102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				}
 103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, MessageHeader->M
 105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearOUT();
 106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				MessageHeader->MessageLength = 0;
 108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
 119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 							         ENDPOINT_DIR_IN, RNDISInterfaceInfo->Config.DataINEndpointSize,
 120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 							         RNDISInterfaceInfo->Config.DataINEndpointDoubleBank ? ENDPOINT_BANK_DOUBLE : ENDPOI
 121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return false;
 123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
 126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	                                 ENDPOINT_DIR_OUT, RNDISInterfaceInfo->Config.DataOUTEndpointSize,
 127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	                                 RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank ? ENDPOINT_B
 128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return false;
 130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber, EP_TYPE_IN
 133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	                                 ENDPOINT_DIR_IN, RNDISInterfaceInfo->Config.NotificationEndpointS
 134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	                                 RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank ? ENDPO
 135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return false;
 137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return true;
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
 146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bRequest      = NOTIF_ResponseAvailable,
 157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wValue        = 0,
 158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wIndex        = 0,
 159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wLength       = 0,
 160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			};
 161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_ClearIN();
 165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDIS_Packet_Message_t RNDISPacketHeader;
 172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK);
 178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDISPacketHeader.DataLength > ETHERNET_FRAME_SIZE_MAX)
 180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_StallTransaction();
 182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				return;
 183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(RNDISInterfaceInfo->State.FrameIN.FrameData, RNDISPacketHeader.DataLengt
 186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_ClearOUT();
 188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameLength = RNDISPacketHeader.DataLength;
 190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameInBuffer = true;
 192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + RNDISInterfaceInfo->State.Fr
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataLength    = RNDISInterfaceInfo->State.FrameOUT.FrameLength;
 204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK)
 206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(RNDISInterfaceInfo->State.FrameOUT.FrameData, RNDISPacketHeader.DataLen
 207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_ClearIN();
 208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer = false;
 210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }							
 213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (MessageHeader->MessageType)
  91               		.loc 1 221 0
  92 005a 4D89      		ldd r20,Y+21
  93 005c 5E89      		ldd r21,Y+22
  94 005e 6F89      		ldd r22,Y+23
  95 0060 788D      		ldd r23,Y+24
  96 0062 4430      		cpi r20,4
  97 0064 5105      		cpc r21,__zero_reg__
  98 0066 6105      		cpc r22,__zero_reg__
  99 0068 7105      		cpc r23,__zero_reg__
 100 006a 01F4      		brne .+2
 101 006c 00C0      		rjmp .L6
 102 006e 00F4      		brsh .L7
 103 0070 4230      		cpi r20,2
 104 0072 5105      		cpc r21,__zero_reg__
 105 0074 6105      		cpc r22,__zero_reg__
 106 0076 7105      		cpc r23,__zero_reg__
 107 0078 01F0      		breq .L8
 108 007a 4330      		cpi r20,3
 109 007c 5105      		cpc r21,__zero_reg__
 110 007e 6105      		cpc r22,__zero_reg__
 111 0080 7105      		cpc r23,__zero_reg__
 112 0082 01F0      		breq .+2
 113 0084 00C0      		rjmp .L5
 114               	.LBB61:
 222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageType           = REMOTE_NDIS_INITIALIZE_CMPLT;
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageLength         = sizeof(RNDIS_Initialize_Complete_t);
 233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->RequestId             = INITIALIZE_Message->RequestId;
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Status                = REMOTE_NDIS_STATUS_SUCCESS;
 235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MajorVersion          = REMOTE_NDIS_VERSION_MAJOR;
 237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MinorVersion          = REMOTE_NDIS_VERSION_MINOR;			
 238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->DeviceFlags           = REMOTE_NDIS_DF_CONNECTIONLESS;
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Medium                = REMOTE_NDIS_MEDIUM_802_3;
 240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer = 1;
 241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxTransferSize       = (sizeof(RNDIS_Packet_Message_t) + ETHERNET_FRAME_SI
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->PacketAlignmentFactor = 0;
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListOffset          = 0;
 244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListSize            = 0;
 245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = RNDIS_Initialized;
 247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_HALT_MSG:
 250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = false;
 115               		.loc 1 250 0
 116 0086 FE01      		movw r30,r28
 117 0088 EB56      		subi r30,107
 118 008a FF4F      		sbci r31,-1
 119 008c 1082      		st Z,__zero_reg__
 251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			MessageHeader->MessageLength = 0;
 120               		.loc 1 251 0
 121 008e 198E      		std Y+25,__zero_reg__
 122 0090 1A8E      		std Y+26,__zero_reg__
 123 0092 1B8E      		std Y+27,__zero_reg__
 124 0094 1C8E      		std Y+28,__zero_reg__
 252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = RNDIS_Uninitialized;
 125               		.loc 1 253 0
 126 0096 CA56      		subi r28,106
 127 0098 DF4F      		sbci r29,-1
 128               	.LVL3:
 129 009a 1882      		st Y,__zero_reg__
 130 009c 00C0      		rjmp .L5
 131               	.LVL4:
 132               	.L7:
 133               	.LBE61:
 221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (MessageHeader->MessageType)
 134               		.loc 1 221 0
 135 009e 4630      		cpi r20,6
 136 00a0 5105      		cpc r21,__zero_reg__
 137 00a2 6105      		cpc r22,__zero_reg__
 138 00a4 7105      		cpc r23,__zero_reg__
 139 00a6 01F4      		brne .+2
 140 00a8 00C0      		rjmp .L10
 141 00aa 00F4      		brsh .+2
 142 00ac 00C0      		rjmp .L11
 143 00ae 4830      		cpi r20,8
 144 00b0 5105      		cpc r21,__zero_reg__
 145 00b2 6105      		cpc r22,__zero_reg__
 146 00b4 7105      		cpc r23,__zero_reg__
 147 00b6 01F0      		breq .+2
 148 00b8 00C0      		rjmp .L5
 149               	.LBB68:
 254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_QUERY_MSG:
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 						
 259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Message_t*  QUERY_Message  = (RNDIS_Query_Message_t*)&RNDISInterfaceInfo->State.RNDI
 260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Complete_t* QUERY_Response = (RNDIS_Query_Complete_t*)&RNDISInterfaceInfo->State.RND
 261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t                Query_Oid      = QUERY_Message->Oid;
 262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 						
 263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*     QueryData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_
 264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                                    QUERY_Message->InformationBu
 265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*     ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Comple
 266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint16_t  ResponseSize;
 267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageType   = REMOTE_NDIS_QUERY_CMPLT;
 269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageLength = sizeof(RNDIS_Query_Complete_t);
 270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 						
 271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, QUERY_Message->Infor
 272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                  ResponseData, &ResponseSize))
 273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength          += ResponseSize;
 276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 							
 277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			else
 281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{				
 282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = 0;
 285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = 0;
 286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_SET_MSG:
 290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Message_t*  SET_Message  = (RNDIS_Set_Message_t*)&RNDISInterfaceInfo->State.RNDISMessa
 293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Complete_t* SET_Response = (RNDIS_Set_Complete_t*)&RNDISInterfaceInfo->State.RNDISMess
 294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageType   = REMOTE_NDIS_SET_CMPLT;
 297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength = sizeof(RNDIS_Set_Complete_t);
 298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->RequestId     = SET_Message->RequestId;
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              SET_Message->InformationBufferOffs
 302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 						
 303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   SET_Message->InformationBufferLength) ?
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_RESET_MSG:
 308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 309:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 310:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Reset_Complete_t* RESET_Response = (RNDIS_Reset_Complete_t*)&RNDISInterfaceInfo->State.RND
 311:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageType     = REMOTE_NDIS_RESET_CMPLT;
 313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength   = sizeof(RNDIS_Reset_Complete_t);
 314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status          = REMOTE_NDIS_STATUS_SUCCESS;
 315:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->AddressingReset = 0;
 316:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 317:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 318:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 319:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 150               		.loc 1 319 0
 151 00ba FE01      		movw r30,r28
 152 00bc EB56      		subi r30,107
 153 00be FF4F      		sbci r31,-1
 154 00c0 81E0      		ldi r24,lo8(1)
 155 00c2 8083      		st Z,r24
 156               	.LVL5:
 320:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 321:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 322:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 323:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 324:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 325:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 326:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageType   = REMOTE_NDIS_KEEPALIVE_CMPLT;
 157               		.loc 1 326 0
 158 00c4 48E0      		ldi r20,lo8(8)
 159 00c6 50E0      		ldi r21,0
 160 00c8 60E0      		ldi r22,0
 161 00ca 70E8      		ldi r23,lo8(-128)
 162 00cc 4D8B      		std Y+21,r20
 163 00ce 5E8B      		std Y+22,r21
 164 00d0 6F8B      		std Y+23,r22
 165 00d2 788F      		std Y+24,r23
 327:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageLength = sizeof(RNDIS_KeepAlive_Complete_t);
 166               		.loc 1 327 0
 167 00d4 40E1      		ldi r20,lo8(16)
 168 00d6 50E0      		ldi r21,0
 169 00d8 60E0      		ldi r22,0
 170 00da 70E0      		ldi r23,0
 171 00dc 498F      		std Y+25,r20
 172 00de 5A8F      		std Y+26,r21
 173 00e0 6B8F      		std Y+27,r22
 174 00e2 7C8F      		std Y+28,r23
 175 00e4 00C0      		rjmp .L52
 176               	.LVL6:
 177               	.L8:
 224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 178               		.loc 1 224 0
 179 00e6 FE01      		movw r30,r28
 180 00e8 EB56      		subi r30,107
 181 00ea FF4F      		sbci r31,-1
 182 00ec 21E0      		ldi r18,lo8(1)
 183 00ee 2083      		st Z,r18
 184               	.LVL7:
 231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageType           = REMOTE_NDIS_INITIALIZE_CMPLT;
 185               		.loc 1 231 0
 186 00f0 82E0      		ldi r24,lo8(2)
 187 00f2 90E0      		ldi r25,0
 188 00f4 A0E0      		ldi r26,0
 189 00f6 B0E8      		ldi r27,lo8(-128)
 190 00f8 8D8B      		std Y+21,r24
 191 00fa 9E8B      		std Y+22,r25
 192 00fc AF8B      		std Y+23,r26
 193 00fe B88F      		std Y+24,r27
 232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageLength         = sizeof(RNDIS_Initialize_Complete_t);
 194               		.loc 1 232 0
 195 0100 84E3      		ldi r24,lo8(52)
 196 0102 90E0      		ldi r25,0
 197 0104 A0E0      		ldi r26,0
 198 0106 B0E0      		ldi r27,0
 199 0108 898F      		std Y+25,r24
 200 010a 9A8F      		std Y+26,r25
 201 010c AB8F      		std Y+27,r26
 202 010e BC8F      		std Y+28,r27
 234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Status                = REMOTE_NDIS_STATUS_SUCCESS;
 203               		.loc 1 234 0
 204 0110 19A2      		std Y+33,__zero_reg__
 205 0112 1AA2      		std Y+34,__zero_reg__
 206 0114 1BA2      		std Y+35,__zero_reg__
 207 0116 1CA2      		std Y+36,__zero_reg__
 236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MajorVersion          = REMOTE_NDIS_VERSION_MAJOR;
 208               		.loc 1 236 0
 209 0118 41E0      		ldi r20,lo8(1)
 210 011a 50E0      		ldi r21,0
 211 011c 60E0      		ldi r22,0
 212 011e 70E0      		ldi r23,0
 213 0120 4DA3      		std Y+37,r20
 214 0122 5EA3      		std Y+38,r21
 215 0124 6FA3      		std Y+39,r22
 216 0126 78A7      		std Y+40,r23
 237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MinorVersion          = REMOTE_NDIS_VERSION_MINOR;			
 217               		.loc 1 237 0
 218 0128 19A6      		std Y+41,__zero_reg__
 219 012a 1AA6      		std Y+42,__zero_reg__
 220 012c 1BA6      		std Y+43,__zero_reg__
 221 012e 1CA6      		std Y+44,__zero_reg__
 238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->DeviceFlags           = REMOTE_NDIS_DF_CONNECTIONLESS;
 222               		.loc 1 238 0
 223 0130 4DA7      		std Y+45,r20
 224 0132 5EA7      		std Y+46,r21
 225 0134 6FA7      		std Y+47,r22
 226 0136 78AB      		std Y+48,r23
 239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Medium                = REMOTE_NDIS_MEDIUM_802_3;
 227               		.loc 1 239 0
 228 0138 19AA      		std Y+49,__zero_reg__
 229 013a 1AAA      		std Y+50,__zero_reg__
 230 013c 1BAA      		std Y+51,__zero_reg__
 231 013e 1CAA      		std Y+52,__zero_reg__
 240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer = 1;
 232               		.loc 1 240 0
 233 0140 4DAB      		std Y+53,r20
 234 0142 5EAB      		std Y+54,r21
 235 0144 6FAB      		std Y+55,r22
 236 0146 78AF      		std Y+56,r23
 241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxTransferSize       = (sizeof(RNDIS_Packet_Message_t) + ETHERNET_FRAME_SI
 237               		.loc 1 241 0
 238 0148 88E0      		ldi r24,lo8(8)
 239 014a 96E0      		ldi r25,lo8(6)
 240 014c A0E0      		ldi r26,0
 241 014e B0E0      		ldi r27,0
 242 0150 89AF      		std Y+57,r24
 243 0152 9AAF      		std Y+58,r25
 244 0154 ABAF      		std Y+59,r26
 245 0156 BCAF      		std Y+60,r27
 242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->PacketAlignmentFactor = 0;
 246               		.loc 1 242 0
 247 0158 FE01      		movw r30,r28
 248 015a FD96      		adiw r30,61
 249 015c 1082      		st Z,__zero_reg__
 250 015e 1182      		std Z+1,__zero_reg__
 251 0160 1282      		std Z+2,__zero_reg__
 252 0162 1382      		std Z+3,__zero_reg__
 243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListOffset          = 0;
 253               		.loc 1 243 0
 254 0164 FE01      		movw r30,r28
 255 0166 EF5B      		subi r30,-65
 256 0168 FF4F      		sbci r31,-1
 257 016a 1082      		st Z,__zero_reg__
 258 016c 1182      		std Z+1,__zero_reg__
 259 016e 1282      		std Z+2,__zero_reg__
 260 0170 1382      		std Z+3,__zero_reg__
 244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListSize            = 0;
 261               		.loc 1 244 0
 262 0172 FE01      		movw r30,r28
 263 0174 EB5B      		subi r30,-69
 264 0176 FF4F      		sbci r31,-1
 265 0178 1082      		st Z,__zero_reg__
 266 017a 1182      		std Z+1,__zero_reg__
 267 017c 1282      		std Z+2,__zero_reg__
 268 017e 1382      		std Z+3,__zero_reg__
 246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = RNDIS_Initialized;
 269               		.loc 1 246 0
 270 0180 CA56      		subi r28,106
 271 0182 DF4F      		sbci r29,-1
 272               	.LVL8:
 273 0184 2883      		st Y,r18
 274 0186 00C0      		rjmp .L5
 275               	.LVL9:
 276               	.L6:
 257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 277               		.loc 1 257 0
 278 0188 81E0      		ldi r24,lo8(1)
 279 018a FE01      		movw r30,r28
 280 018c EB56      		subi r30,107
 281 018e FF4F      		sbci r31,-1
 282 0190 8083      		st Z,r24
 283               	.LVL10:
 261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t                Query_Oid      = QUERY_Message->Oid;
 284               		.loc 1 261 0
 285 0192 49A1      		ldd r20,Y+33
 286 0194 5AA1      		ldd r21,Y+34
 287 0196 6BA1      		ldd r22,Y+35
 288 0198 7CA1      		ldd r23,Y+36
 289               	.LVL11:
 265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*     ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Comple
 290               		.loc 1 265 0
 291 019a CE01      		movw r24,r28
 292 019c 8D96      		adiw r24,45
 293               	.LVL12:
 268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageType   = REMOTE_NDIS_QUERY_CMPLT;
 294               		.loc 1 268 0
 295 019e 04E0      		ldi r16,lo8(4)
 296 01a0 10E0      		ldi r17,0
 297 01a2 20E0      		ldi r18,0
 298 01a4 30E8      		ldi r19,lo8(-128)
 299 01a6 0D8B      		std Y+21,r16
 300 01a8 1E8B      		std Y+22,r17
 301 01aa 2F8B      		std Y+23,r18
 302 01ac 388F      		std Y+24,r19
 269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageLength = sizeof(RNDIS_Query_Complete_t);
 303               		.loc 1 269 0
 304 01ae 08E1      		ldi r16,lo8(24)
 305 01b0 10E0      		ldi r17,0
 306 01b2 20E0      		ldi r18,0
 307 01b4 30E0      		ldi r19,0
 308 01b6 098F      		std Y+25,r16
 309 01b8 1A8F      		std Y+26,r17
 310 01ba 2B8F      		std Y+27,r18
 311 01bc 3C8F      		std Y+28,r19
 312               	.LVL13:
 313               	.LBB62:
 314               	.LBB63:
 328:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->RequestId     = KEEPALIVE_Message->RequestId;
 329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 330:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 331:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 332:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 333:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 334:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 335:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 336:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint32_t OId,
 337:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* const QueryData,
 338:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint16_t QuerySize,
 339:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* ResponseData,
 340:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           uint16_t* const ResponseSize)
 341:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 342:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QueryData;
 343:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QuerySize;
 344:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 315               		.loc 1 345 0
 316 01be 4E30      		cpi r20,14
 317 01c0 21E0      		ldi r18,1
 318 01c2 5207      		cpc r21,r18
 319 01c4 6207      		cpc r22,r18
 320 01c6 7105      		cpc r23,__zero_reg__
 321 01c8 01F4      		brne .+2
 322 01ca 00C0      		rjmp .L14
 323 01cc 00F0      		brlo .+2
 324 01ce 00C0      		rjmp .L15
 325 01d0 4630      		cpi r20,6
 326 01d2 F1E0      		ldi r31,1
 327 01d4 5F07      		cpc r21,r31
 328 01d6 6F07      		cpc r22,r31
 329 01d8 7105      		cpc r23,__zero_reg__
 330 01da 01F4      		brne .+2
 331 01dc 00C0      		rjmp .L16
 332 01de 00F4      		brsh .L17
 333 01e0 4230      		cpi r20,2
 334 01e2 E1E0      		ldi r30,1
 335 01e4 5E07      		cpc r21,r30
 336 01e6 6E07      		cpc r22,r30
 337 01e8 7105      		cpc r23,__zero_reg__
 338 01ea 01F4      		brne .+2
 339 01ec 00C0      		rjmp .L27
 340 01ee 00F4      		brsh .L19
 341 01f0 4130      		cpi r20,1
 342 01f2 5140      		sbci r21,1
 343 01f4 6140      		sbci r22,1
 344 01f6 7105      		cpc r23,__zero_reg__
 345 01f8 01F0      		breq .+2
 346 01fa 00C0      		rjmp .L13
 347               	.LVL14:
 346:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 347:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_SUPPORTED_LIST:
 348:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 349:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 350:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 348               		.loc 1 350 0
 349 01fc 4CE6      		ldi r20,lo8(108)
 350 01fe 50E0      		ldi r21,0
 351               	.LVL15:
 352 0200 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 353 0202 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 354 0204 0E94 0000 		call memcpy_P
 355               	.LVL16:
 348:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 356               		.loc 1 348 0
 357 0208 0CE6      		ldi r16,lo8(108)
 358 020a 10E0      		ldi r17,0
 359 020c 00C0      		rjmp .L34
 360               	.LVL17:
 361               	.L19:
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 362               		.loc 1 345 0
 363 020e 4530      		cpi r20,5
 364 0210 5140      		sbci r21,1
 365 0212 6140      		sbci r22,1
 366 0214 7105      		cpc r23,__zero_reg__
 367               	.LVL18:
 368 0216 00F4      		brsh .+2
 369 0218 00C0      		rjmp .L27
 370 021a 00C0      		rjmp .L13
 371               	.LVL19:
 372               	.L17:
 373 021c 4C30      		cpi r20,12
 374 021e E1E0      		ldi r30,1
 375 0220 5E07      		cpc r21,r30
 376 0222 6E07      		cpc r22,r30
 377 0224 7105      		cpc r23,__zero_reg__
 378 0226 00F4      		brsh .L22
 379 0228 4A30      		cpi r20,10
 380 022a F1E0      		ldi r31,1
 381 022c 5F07      		cpc r21,r31
 382 022e 6F07      		cpc r22,r31
 383 0230 7105      		cpc r23,__zero_reg__
 384 0232 00F0      		brlo .+2
 385 0234 00C0      		rjmp .L16
 386 0236 4730      		cpi r20,7
 387 0238 5140      		sbci r21,1
 388 023a 6140      		sbci r22,1
 389 023c 7105      		cpc r23,__zero_reg__
 390 023e 01F0      		breq .+2
 391 0240 00C0      		rjmp .L13
 392               	.LVL20:
 351:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 352:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 353:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 354:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 355:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 356:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate that the device is a true ethernet link */
 357:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0;
 358:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 359:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 360:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_HARDWARE_STATUS:
 361:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 362:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 363:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = NDIS_HardwareStatus_Ready;
 364:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 365:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 366:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 367:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_IN_USE:
 368:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 369:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 370:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIUM_802_3;
 371:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 372:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 373:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_ID:
 374:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 375:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 376:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 377:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0x00FFFFFF;
 378:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 379:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 380:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 381:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 382:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 383:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 384:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 385:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = ETHERNET_FRAME_SIZE_MAX;
 386:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 387:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 388:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 389:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 390:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 391:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 392:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 393:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 394:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 395:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 396:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 397:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIA_STATE_CONNECTED;
 398:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 399:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 400:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_LINK_SPEED:
 401:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 402:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 403:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate 10Mb/s link speed */
 404:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 100000;
 393               		.loc 1 404 0
 394 0242 40EA      		ldi r20,lo8(-96)
 395 0244 56E8      		ldi r21,lo8(-122)
 396 0246 61E0      		ldi r22,lo8(1)
 397 0248 70E0      		ldi r23,0
 398               	.LVL21:
 399 024a 00C0      		rjmp .L54
 400               	.LVL22:
 401               	.L22:
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 402               		.loc 1 345 0
 403 024c 4C30      		cpi r20,12
 404 024e E1E0      		ldi r30,1
 405 0250 5E07      		cpc r21,r30
 406 0252 6E07      		cpc r22,r30
 407 0254 7105      		cpc r23,__zero_reg__
 408 0256 01F4      		brne .+2
 409 0258 00C0      		rjmp .L24
 410 025a 4D30      		cpi r20,13
 411 025c 5140      		sbci r21,1
 412 025e 6140      		sbci r22,1
 413 0260 7105      		cpc r23,__zero_reg__
 414 0262 01F0      		breq .+2
 415 0264 00C0      		rjmp .L13
 389:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 416               		.loc 1 389 0
 417 0266 6D85      		ldd r22,Y+13
 418 0268 7E85      		ldd r23,Y+14
 419 026a FB01      		movw r30,r22
 420               		0:
 421 026c 0190      		ld __tmp_reg__,Z+
 422 026e 0020      		tst __tmp_reg__
 423 0270 01F4      		brne 0b
 424 0272 8F01      		movw r16,r30
 425 0274 061B      		sub r16,r22
 426 0276 170B      		sbc r17,r23
 427               	.LVL23:
 391:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 428               		.loc 1 391 0
 429 0278 A801      		movw r20,r16
 430               	.LVL24:
 431 027a 0E94 0000 		call memcpy
 432               	.LVL25:
 433 027e 00C0      		rjmp .L34
 434               	.LVL26:
 435               	.L15:
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 436               		.loc 1 345 0
 437 0280 4630      		cpi r20,6
 438 0282 21E0      		ldi r18,1
 439 0284 5207      		cpc r21,r18
 440 0286 22E0      		ldi r18,2
 441 0288 6207      		cpc r22,r18
 442 028a 7105      		cpc r23,__zero_reg__
 443 028c 00F4      		brsh .L26
 444 028e 4130      		cpi r20,1
 445 0290 81E0      		ldi r24,1
 446 0292 5807      		cpc r21,r24
 447 0294 82E0      		ldi r24,2
 448 0296 6807      		cpc r22,r24
 449 0298 7105      		cpc r23,__zero_reg__
 450               	.LVL27:
 451 029a 00F0      		brlo .+2
 452 029c 00C0      		rjmp .L27
 453 029e 4431      		cpi r20,20
 454 02a0 E1E0      		ldi r30,1
 455 02a2 5E07      		cpc r21,r30
 456 02a4 6E07      		cpc r22,r30
 457 02a6 7105      		cpc r23,__zero_reg__
 458 02a8 01F4      		brne .+2
 459 02aa 00C0      		rjmp .L27
 460 02ac 4230      		cpi r20,2
 461 02ae F2E0      		ldi r31,2
 462 02b0 5F07      		cpc r21,r31
 463 02b2 F1E0      		ldi r31,1
 464 02b4 6F07      		cpc r22,r31
 465 02b6 7105      		cpc r23,__zero_reg__
 466 02b8 01F4      		brne .+2
 467 02ba 00C0      		rjmp .L27
 468 02bc 4131      		cpi r20,17
 469 02be 5140      		sbci r21,1
 470 02c0 6140      		sbci r22,1
 471 02c2 7105      		cpc r23,__zero_reg__
 472 02c4 01F0      		breq .+2
 473 02c6 00C0      		rjmp .L13
 474               	.LVL28:
 405:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 406:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 407:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 408:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_CURRENT_ADDRESS:
 409:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 410:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 411:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 412:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 413:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 414:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 415:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 416:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate only one multicast address supported */
 418:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 1;
 419:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 420:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 421:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 422:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 423:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 424:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = RNDISInterfaceInfo->State.CurrPacketFilter;
 425:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 426:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;			
 427:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_OK:
 428:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_OK:
 429:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_ERROR:
 430:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_ERROR:
 431:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_NO_BUFFER:
 432:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 433:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 434:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 435:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 436:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 437:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Unused statistic OIDs - always return 0 for each */
 438:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0;
 439:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 440:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 441:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 443:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 444:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 445:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = (RNDIS_MESSAGE_BUFFER_SIZE + ETHERNET_FRAME_SIZE_MAX);
 475               		.loc 1 445 0
 476 02c8 4CE5      		ldi r20,lo8(92)
 477 02ca 56E0      		ldi r21,lo8(6)
 478 02cc 60E0      		ldi r22,0
 479 02ce 70E0      		ldi r23,0
 480               	.LVL29:
 481 02d0 00C0      		rjmp .L54
 482               	.LVL30:
 483               	.L26:
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 484               		.loc 1 345 0
 485 02d2 4430      		cpi r20,4
 486 02d4 E1E0      		ldi r30,1
 487 02d6 5E07      		cpc r21,r30
 488 02d8 6E07      		cpc r22,r30
 489 02da 7E07      		cpc r23,r30
 490 02dc 01F0      		breq .L31
 491 02de 00F4      		brsh .L32
 492 02e0 4150      		subi r20,1
 493 02e2 5140      		sbci r21,1
 494 02e4 6140      		sbci r22,1
 495 02e6 7140      		sbci r23,1
 496               	.LVL31:
 497 02e8 4230      		cpi r20,2
 498 02ea 5105      		cpc r21,__zero_reg__
 499 02ec 6105      		cpc r22,__zero_reg__
 500 02ee 7105      		cpc r23,__zero_reg__
 501 02f0 00F0      		brlo .+2
 502 02f2 00C0      		rjmp .L13
 503               	.LVL32:
 411:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 504               		.loc 1 411 0
 505 02f4 26E0      		ldi r18,lo8(6)
 506 02f6 FE01      		movw r30,r28
 507 02f8 3F96      		adiw r30,15
 508 02fa DC01      		movw r26,r24
 509               		0:
 510 02fc 0190      		ld r0,Z+
 511 02fe 0D92      		st X+,r0
 512 0300 2A95      		dec r18
 513 0302 01F4      		brne 0b
 409:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 514               		.loc 1 409 0
 515 0304 06E0      		ldi r16,lo8(6)
 516 0306 10E0      		ldi r17,0
 517 0308 00C0      		rjmp .L34
 518               	.LVL33:
 519               	.L32:
 345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 520               		.loc 1 345 0
 521 030a 4150      		subi r20,1
 522 030c 5140      		sbci r21,1
 523 030e 6240      		sbci r22,2
 524 0310 7140      		sbci r23,1
 525               	.LVL34:
 526 0312 4330      		cpi r20,3
 527 0314 5105      		cpc r21,__zero_reg__
 528 0316 6105      		cpc r22,__zero_reg__
 529 0318 7105      		cpc r23,__zero_reg__
 530 031a 00F0      		brlo .L27
 531 031c 00C0      		rjmp .L13
 532               	.LVL35:
 533               	.L24:
 377:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0x00FFFFFF;
 534               		.loc 1 377 0
 535 031e 4FEF      		ldi r20,lo8(-1)
 536 0320 5FEF      		ldi r21,lo8(-1)
 537 0322 6FEF      		ldi r22,lo8(-1)
 538 0324 70E0      		ldi r23,0
 539               	.LVL36:
 540 0326 00C0      		rjmp .L54
 541               	.LVL37:
 542               	.L16:
 385:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = ETHERNET_FRAME_SIZE_MAX;
 543               		.loc 1 385 0
 544 0328 4CED      		ldi r20,lo8(-36)
 545 032a 55E0      		ldi r21,lo8(5)
 546 032c 60E0      		ldi r22,0
 547 032e 70E0      		ldi r23,0
 548               	.LVL38:
 549 0330 00C0      		rjmp .L54
 550               	.LVL39:
 551               	.L31:
 418:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 1;
 552               		.loc 1 418 0
 553 0332 41E0      		ldi r20,lo8(1)
 554 0334 50E0      		ldi r21,0
 555 0336 60E0      		ldi r22,0
 556 0338 70E0      		ldi r23,0
 557               	.LVL40:
 558 033a 00C0      		rjmp .L54
 559               	.LVL41:
 560               	.L14:
 424:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = RNDISInterfaceInfo->State.CurrPacketFilter;
 561               		.loc 1 424 0
 562 033c FE01      		movw r30,r28
 563 033e E956      		subi r30,105
 564 0340 FF4F      		sbci r31,-1
 565 0342 4081      		ld r20,Z
 566 0344 5181      		ldd r21,Z+1
 567 0346 6281      		ldd r22,Z+2
 568 0348 7381      		ldd r23,Z+3
 569               	.LVL42:
 570 034a 00C0      		rjmp .L54
 571               	.LVL43:
 572               	.L27:
 438:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0;
 573               		.loc 1 438 0
 574 034c 1DA6      		std Y+45,__zero_reg__
 575 034e 1EA6      		std Y+46,__zero_reg__
 576 0350 1FA6      		std Y+47,__zero_reg__
 577 0352 18AA      		std Y+48,__zero_reg__
 578 0354 00C0      		rjmp .L53
 579               	.L54:
 580               		.loc 1 445 0
 581 0356 4DA7      		std Y+45,r20
 582 0358 5EA7      		std Y+46,r21
 583 035a 6FA7      		std Y+47,r22
 584 035c 78AB      		std Y+48,r23
 585               	.L53:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 586               		.loc 1 442 0
 587 035e 04E0      		ldi r16,lo8(4)
 588 0360 10E0      		ldi r17,0
 589 0362 00C0      		rjmp .L34
 590               	.LVL44:
 591               	.L11:
 592               	.LBE63:
 593               	.LBE62:
 290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 594               		.loc 1 290 0
 595 0364 81E0      		ldi r24,lo8(1)
 596 0366 FE01      		movw r30,r28
 597 0368 EB56      		subi r30,107
 598 036a FF4F      		sbci r31,-1
 599 036c 8083      		st Z,r24
 600               	.LVL45:
 294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 601               		.loc 1 294 0
 602 036e 49A1      		ldd r20,Y+33
 603 0370 5AA1      		ldd r21,Y+34
 604 0372 6BA1      		ldd r22,Y+35
 605 0374 7CA1      		ldd r23,Y+36
 606               	.LVL46:
 296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageType   = REMOTE_NDIS_SET_CMPLT;
 607               		.loc 1 296 0
 608 0376 05E0      		ldi r16,lo8(5)
 609 0378 10E0      		ldi r17,0
 610 037a 20E0      		ldi r18,0
 611 037c 30E8      		ldi r19,lo8(-128)
 612 037e 0D8B      		std Y+21,r16
 613 0380 1E8B      		std Y+22,r17
 614 0382 2F8B      		std Y+23,r18
 615 0384 388F      		std Y+24,r19
 297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength = sizeof(RNDIS_Set_Complete_t);
 616               		.loc 1 297 0
 617 0386 00E1      		ldi r16,lo8(16)
 618 0388 10E0      		ldi r17,0
 619 038a 20E0      		ldi r18,0
 620 038c 30E0      		ldi r19,0
 621 038e 098F      		std Y+25,r16
 622 0390 1A8F      		std Y+26,r17
 623 0392 2B8F      		std Y+27,r18
 624 0394 3C8F      		std Y+28,r19
 301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              SET_Message->InformationBufferOffs
 625               		.loc 1 301 0
 626 0396 09A5      		ldd r16,Y+41
 627 0398 1AA5      		ldd r17,Y+42
 628 039a 2BA5      		ldd r18,Y+43
 629 039c 3CA5      		ldd r19,Y+44
 630               	.LVL47:
 631               	.LBB64:
 632               	.LBB65:
 446:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		
 447:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 448:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		default:
 449:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 450:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 451:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 452:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 453:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint32_t OId,
 455:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const void* SetData,
 456:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint16_t SetSize)
 457:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 458:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)SetSize;
 459:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 460:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 633               		.loc 1 460 0
 634 039e 4E30      		cpi r20,14
 635 03a0 F1E0      		ldi r31,1
 636 03a2 5F07      		cpc r21,r31
 637 03a4 6F07      		cpc r22,r31
 638 03a6 7105      		cpc r23,__zero_reg__
 639 03a8 01F0      		breq .L36
 640 03aa 4330      		cpi r20,3
 641 03ac 5140      		sbci r21,1
 642 03ae 6140      		sbci r22,1
 643 03b0 7140      		sbci r23,1
 644 03b2 01F0      		breq .L37
 645               	.LBE65:
 646               	.LBE64:
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 647               		.loc 1 305 0
 648 03b4 4BEB      		ldi r20,lo8(-69)
 649 03b6 50E0      		ldi r21,0
 650 03b8 60E0      		ldi r22,0
 651 03ba 70EC      		ldi r23,lo8(-64)
 652               	.LVL48:
 653 03bc 00C0      		rjmp .L35
 654               	.LVL49:
 655               	.L36:
 300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 656               		.loc 1 300 0
 657 03be B901      		movw r22,r18
 658 03c0 A801      		movw r20,r16
 659               	.LVL50:
 660 03c2 485F      		subi r20,-8
 661 03c4 5F4F      		sbci r21,-1
 662 03c6 6F4F      		sbci r22,-1
 663 03c8 7F4F      		sbci r23,-1
 664               	.LBB67:
 665               	.LBB66:
 461:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 462:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 463:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = *((uint32_t*)SetData);
 666               		.loc 1 463 0
 667 03ca FE01      		movw r30,r28
 668 03cc E40F      		add r30,r20
 669 03ce F51F      		adc r31,r21
 670 03d0 4589      		ldd r20,Z+21
 671 03d2 5689      		ldd r21,Z+22
 672 03d4 6789      		ldd r22,Z+23
 673 03d6 708D      		ldd r23,Z+24
 674 03d8 FE01      		movw r30,r28
 675 03da E956      		subi r30,105
 676 03dc FF4F      		sbci r31,-1
 677 03de 4083      		st Z,r20
 678 03e0 5183      		std Z+1,r21
 679 03e2 6283      		std Z+2,r22
 680 03e4 7383      		std Z+3,r23
 464:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = ((RNDISInterfaceInfo->State.CurrPacketFilter) ?
 681               		.loc 1 464 0
 682 03e6 82E0      		ldi r24,lo8(2)
 683 03e8 FE01      		movw r30,r28
 684 03ea EA56      		subi r30,106
 685 03ec FF4F      		sbci r31,-1
 686 03ee 8083      		st Z,r24
 687               	.L37:
 688               	.LBE66:
 689               	.LBE67:
 305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 690               		.loc 1 305 0
 691 03f0 40E0      		ldi r20,0
 692 03f2 50E0      		ldi r21,0
 693 03f4 BA01      		movw r22,r20
 694               	.L35:
 303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 695               		.loc 1 303 0
 696 03f6 49A3      		std Y+33,r20
 697 03f8 5AA3      		std Y+34,r21
 698 03fa 6BA3      		std Y+35,r22
 699 03fc 7CA3      		std Y+36,r23
 700               	.LVL51:
 701 03fe 00C0      		rjmp .L5
 702               	.LVL52:
 703               	.L10:
 308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 704               		.loc 1 308 0
 705 0400 FE01      		movw r30,r28
 706 0402 EB56      		subi r30,107
 707 0404 FF4F      		sbci r31,-1
 708 0406 81E0      		ldi r24,lo8(1)
 709 0408 8083      		st Z,r24
 710               	.LVL53:
 312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageType     = REMOTE_NDIS_RESET_CMPLT;
 711               		.loc 1 312 0
 712 040a 46E0      		ldi r20,lo8(6)
 713 040c 50E0      		ldi r21,0
 714 040e 60E0      		ldi r22,0
 715 0410 70E8      		ldi r23,lo8(-128)
 716 0412 4D8B      		std Y+21,r20
 717 0414 5E8B      		std Y+22,r21
 718 0416 6F8B      		std Y+23,r22
 719 0418 788F      		std Y+24,r23
 313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength   = sizeof(RNDIS_Reset_Complete_t);
 720               		.loc 1 313 0
 721 041a 40E1      		ldi r20,lo8(16)
 722 041c 50E0      		ldi r21,0
 723 041e 60E0      		ldi r22,0
 724 0420 70E0      		ldi r23,0
 725 0422 498F      		std Y+25,r20
 726 0424 5A8F      		std Y+26,r21
 727 0426 6B8F      		std Y+27,r22
 728 0428 7C8F      		std Y+28,r23
 314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status          = REMOTE_NDIS_STATUS_SUCCESS;
 729               		.loc 1 314 0
 730 042a 1D8E      		std Y+29,__zero_reg__
 731 042c 1E8E      		std Y+30,__zero_reg__
 732 042e 1F8E      		std Y+31,__zero_reg__
 733 0430 18A2      		std Y+32,__zero_reg__
 734               	.LVL54:
 735               	.L52:
 329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 736               		.loc 1 329 0
 737 0432 19A2      		std Y+33,__zero_reg__
 738 0434 1AA2      		std Y+34,__zero_reg__
 739 0436 1BA2      		std Y+35,__zero_reg__
 740 0438 1CA2      		std Y+36,__zero_reg__
 741               	.LVL55:
 742               	.L5:
 743               	.LBE68:
 744               	.LBE60:
 745               	.LBE59:
 746               	.LBB71:
 747               	.LBB72:
 443:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 444:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 445:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 446:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 447:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 448:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 449:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 450:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 451:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void)
 452:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 453:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 748               		.loc 2 454 0
 749 043a 8091 E800 		lds r24,232
 750 043e 8E77      		andi r24,lo8(126)
 751 0440 8093 E800 		sts 232,r24
 752 0444 00C0      		rjmp .L1
 753               	.LVL56:
 754               	.L4:
 755               	.LBE72:
 756               	.LBE71:
  92:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 757               		.loc 1 92 0
 758 0446 8091 0000 		lds r24,USB_ControlRequest
 759 044a 813A      		cpi r24,lo8(-95)
 760 044c 01F0      		breq .+2
 761 044e 00C0      		rjmp .L1
 762               	.LBB73:
 763               	.LBB74:
 764               	.LBB75:
 442:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 765               		.loc 2 442 0
 766 0450 8091 E800 		lds r24,232
 767 0454 877F      		andi r24,lo8(-9)
 768 0456 8093 E800 		sts 232,r24
 769               	.LVL57:
 770               	.LBE75:
 771               	.LBE74:
  98:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				if (!(MessageHeader->MessageLength))
 772               		.loc 1 98 0
 773 045a 498D      		ldd r20,Y+25
 774 045c 5A8D      		ldd r21,Y+26
 775 045e 6B8D      		ldd r22,Y+27
 776 0460 7C8D      		ldd r23,Y+28
 777 0462 452B      		or r20,r21
 778 0464 462B      		or r20,r22
 779 0466 472B      		or r20,r23
 780 0468 01F4      		brne .L38
 100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 781               		.loc 1 100 0
 782 046a 1D8A      		std Y+21,__zero_reg__
 101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength = 1;
 783               		.loc 1 101 0
 784 046c 41E0      		ldi r20,lo8(1)
 785 046e 50E0      		ldi r21,0
 786 0470 60E0      		ldi r22,0
 787 0472 70E0      		ldi r23,0
 788 0474 498F      		std Y+25,r20
 789 0476 5A8F      		std Y+26,r21
 790 0478 6B8F      		std Y+27,r22
 791 047a 7C8F      		std Y+28,r23
 792               	.L38:
 104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, MessageHeader->M
 793               		.loc 1 104 0
 794 047c 698D      		ldd r22,Y+25
 795 047e 7A8D      		ldd r23,Y+26
 796 0480 CE01      		movw r24,r28
 797 0482 4596      		adiw r24,21
 798 0484 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 799               	.LVL58:
 800               	.LBB76:
 801               	.LBB77:
 455:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 456:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << TXINI);
 457:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 458:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 459:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 460:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 461:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 462:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 463:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 464:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 465:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 466:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void)
 467:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 468:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 469:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 802               		.loc 2 469 0
 803 0488 8091 E800 		lds r24,232
 804 048c 8B77      		andi r24,lo8(123)
 805 048e 8093 E800 		sts 232,r24
 806               	.LBE77:
 807               	.LBE76:
 107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				MessageHeader->MessageLength = 0;
 808               		.loc 1 107 0
 809 0492 198E      		std Y+25,__zero_reg__
 810 0494 1A8E      		std Y+26,__zero_reg__
 811 0496 1B8E      		std Y+27,__zero_reg__
 812 0498 1C8E      		std Y+28,__zero_reg__
 813 049a 00C0      		rjmp .L1
 814               	.LVL59:
 815               	.L34:
 816               	.LBE73:
 817               	.LBB78:
 818               	.LBB70:
 819               	.LBB69:
 274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
 820               		.loc 1 274 0
 821 049c 19A2      		std Y+33,__zero_reg__
 822 049e 1AA2      		std Y+34,__zero_reg__
 823 04a0 1BA2      		std Y+35,__zero_reg__
 824 04a2 1CA2      		std Y+36,__zero_reg__
 275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength          += ResponseSize;
 825               		.loc 1 275 0
 826 04a4 20E0      		ldi r18,0
 827 04a6 30E0      		ldi r19,0
 828 04a8 498D      		ldd r20,Y+25
 829 04aa 5A8D      		ldd r21,Y+26
 830 04ac 6B8D      		ldd r22,Y+27
 831 04ae 7C8D      		ldd r23,Y+28
 832 04b0 400F      		add r20,r16
 833 04b2 511F      		adc r21,r17
 834 04b4 621F      		adc r22,r18
 835 04b6 731F      		adc r23,r19
 836 04b8 498F      		std Y+25,r20
 837 04ba 5A8F      		std Y+26,r21
 838 04bc 6B8F      		std Y+27,r22
 839 04be 7C8F      		std Y+28,r23
 277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 840               		.loc 1 277 0
 841 04c0 0DA3      		std Y+37,r16
 842 04c2 1EA3      		std Y+38,r17
 843 04c4 2FA3      		std Y+39,r18
 844 04c6 38A7      		std Y+40,r19
 278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 845               		.loc 1 278 0
 846 04c8 40E1      		ldi r20,lo8(16)
 847 04ca 50E0      		ldi r21,0
 848 04cc 60E0      		ldi r22,0
 849 04ce 70E0      		ldi r23,0
 850 04d0 49A7      		std Y+41,r20
 851 04d2 5AA7      		std Y+42,r21
 852 04d4 6BA7      		std Y+43,r22
 853 04d6 7CA7      		std Y+44,r23
 854 04d8 00C0      		rjmp .L5
 855               	.LVL60:
 856               	.L13:
 282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 857               		.loc 1 282 0
 858 04da 4BEB      		ldi r20,lo8(-69)
 859 04dc 50E0      		ldi r21,0
 860 04de 60E0      		ldi r22,0
 861 04e0 70EC      		ldi r23,lo8(-64)
 862 04e2 49A3      		std Y+33,r20
 863 04e4 5AA3      		std Y+34,r21
 864 04e6 6BA3      		std Y+35,r22
 865 04e8 7CA3      		std Y+36,r23
 866               	.LVL61:
 284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = 0;
 867               		.loc 1 284 0
 868 04ea 1DA2      		std Y+37,__zero_reg__
 869 04ec 1EA2      		std Y+38,__zero_reg__
 870 04ee 1FA2      		std Y+39,__zero_reg__
 871 04f0 18A6      		std Y+40,__zero_reg__
 872               	.LVL62:
 285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = 0;
 873               		.loc 1 285 0
 874 04f2 19A6      		std Y+41,__zero_reg__
 875 04f4 1AA6      		std Y+42,__zero_reg__
 876 04f6 1BA6      		std Y+43,__zero_reg__
 877 04f8 1CA6      		std Y+44,__zero_reg__
 878               	.LVL63:
 879 04fa 00C0      		rjmp .L5
 880               	.LVL64:
 881               	.L1:
 882               	/* epilogue start */
 883               	.LBE69:
 884               	.LBE70:
 885               	.LBE78:
 112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 886               		.loc 1 112 0
 887 04fc DF91      		pop r29
 888 04fe CF91      		pop r28
 889 0500 1F91      		pop r17
 890 0502 0F91      		pop r16
 891 0504 0895      		ret
 892               		.cfi_endproc
 893               	.LFE65:
 895               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 896               	.global	RNDIS_Device_ConfigureEndpoints
 898               	RNDIS_Device_ConfigureEndpoints:
 899               	.LFB66:
 115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 900               		.loc 1 115 0
 901               		.cfi_startproc
 902               	.LVL65:
 903 0000 0F93      		push r16
 904               	.LCFI4:
 905               		.cfi_def_cfa_offset 3
 906               		.cfi_offset 16, -2
 907 0002 1F93      		push r17
 908               	.LCFI5:
 909               		.cfi_def_cfa_offset 4
 910               		.cfi_offset 17, -3
 911 0004 CF93      		push r28
 912               	.LCFI6:
 913               		.cfi_def_cfa_offset 5
 914               		.cfi_offset 28, -4
 915 0006 DF93      		push r29
 916               	.LCFI7:
 917               		.cfi_def_cfa_offset 6
 918               		.cfi_offset 29, -5
 919               	/* prologue: function */
 920               	/* frame size = 0 */
 921               	/* stack size = 4 */
 922               	.L__stack_usage = 4
 923 0008 EC01      		movw r28,r24
 116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 924               		.loc 1 116 0
 925 000a FC01      		movw r30,r24
 926 000c 7596      		adiw r30,21
 927 000e 84E4      		ldi r24,lo8(68)
 928 0010 9CE0      		ldi r25,lo8(12)
 929               	.LVL66:
 930 0012 DF01      		movw r26,r30
 931 0014 9C01      		movw r18,r24
 932               		0:
 933 0016 1D92      		st X+,__zero_reg__
 934 0018 2150      		subi r18,1
 935 001a 3040      		sbci r19,0
 936 001c 01F4      		brne 0b
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
 937               		.loc 1 118 0
 938 001e 2A81      		ldd r18,Y+2
 939 0020 3B81      		ldd r19,Y+3
 940 0022 8C81      		ldd r24,Y+4
 941 0024 8823      		tst r24
 942 0026 01F0      		breq .L63
 943 0028 14E0      		ldi r17,lo8(4)
 944 002a 00C0      		rjmp .L57
 945               	.L63:
 946 002c 10E0      		ldi r17,0
 947               	.L57:
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
 948               		.loc 1 118 0 is_stmt 0 discriminator 3
 949 002e 0981      		ldd r16,Y+1
 950               	.LVL67:
 951               	.LBB97:
 952               	.LBB98:
 470:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 471:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << RXOUTI);	
 472:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 473:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 474:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 475:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 476:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 477:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 478:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborted and the host can begin its own recovery sequence.
 479:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 480:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 481:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 482:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint.
 483:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 484:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 485:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 486:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 487:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void)
 488:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 489:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 490:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 491:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 492:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 493:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 494:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 495:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 496:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 497:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void)
 498:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 499:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQC);
 500:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 501:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 502:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 503:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 504:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 505:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 506:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint is stalled, false otherwise.
 507:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 508:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 509:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void)
 510:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 511:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 512:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 513:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 514:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 515:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 516:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void)
 517:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 518:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << RSTDT);
 519:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 520:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 521:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines the currently selected endpoint's direction.
 522:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 523:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return The currently selected endpoint's direction, as a ENDPOINT_DIR_* mask.
 524:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 525:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 526:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 527:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 528:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (UECFG0X & ENDPOINT_DIR_IN);
 529:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 530:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 531:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sets the direction of the currently selected endpoint.
 532:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 533:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a ENDPOINT_DIR_* mask.
 534:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 535:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 536:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 537:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 538:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECFG0X = ((UECFG0X & ~ENDPOINT_DIR_IN) | DirectionMask);
 539:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 540:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 541:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 542:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 543:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 544:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 545:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 546:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 547:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 548:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void)
 549:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 550:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEDATX;
 551:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 552:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 553:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes one byte from the currently selected endpoint's bank, for IN direction endpoints.
 554:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 555:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 556:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 557:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Byte  Next byte to write into the the currently selected endpoint's FIFO buffer.
 558:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 559:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 560:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte)
 561:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 562:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = Byte;
 563:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 564:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 565:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 566:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 567:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 568:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 569:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void) ATTR_ALWAYS_INLINE;
 570:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void)
 571:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 572:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 573:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 574:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 575:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 576:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 577:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in little endian format, for OUT
 578:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 579:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 580:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 581:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 582:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 583:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 584:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 585:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void)
 586:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 587:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 588:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 589:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 590:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 591:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 592:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 593:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 594:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 595:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 596:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 597:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 598:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 599:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in big endian format, for OUT
 600:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 601:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 602:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 603:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 604:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 605:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 606:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 607:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void)
 608:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 609:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 610:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 611:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 612:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 613:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 614:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 615:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 616:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 617:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 618:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 619:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 620:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 621:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in little endian format, for IN
 622:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 623:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 624:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 625:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 626:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 627:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 628:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 629:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word)
 630:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 631:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 632:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 633:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 634:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 635:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in big endian format, for IN
 636:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 637:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 638:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 639:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 640:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 641:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 642:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 643:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word)
 644:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 645:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 646:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 647:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 648:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 649:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards two bytes from the currently selected endpoint's bank, for OUT direction endpoints.
 650:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 651:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 652:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 653:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void) ATTR_ALWAYS_INLINE;
 654:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void)
 655:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 656:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 657:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 658:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 659:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 660:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 661:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 662:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in little endian format, for OU
 663:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 664:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 665:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 666:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 667:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 668:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 669:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 670:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void)
 671:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 672:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 673:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 674:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 675:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 676:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 677:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 678:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 679:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 680:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 681:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 682:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 683:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 684:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 685:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 686:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in big endian format, for OUT
 687:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 688:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 689:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 690:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 691:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 692:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 693:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 694:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void)
 695:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 696:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 697:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 698:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 699:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 700:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 701:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 702:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 703:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 704:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 705:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 706:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 707:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 708:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 709:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 710:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in little endian format, for IN
 711:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 712:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 713:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 714:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 715:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 716:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 717:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 718:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord)
 719:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 720:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 721:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 722:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 723:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 724:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 725:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 726:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in big endian format, for IN
 727:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 728:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 729:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 730:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 731:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 732:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 733:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 734:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord)
 735:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 736:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 737:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 738:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 739:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 740:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 741:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 742:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards four bytes from the currently selected endpoint's bank, for OUT direction endpoints
 743:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 744:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 745:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 746:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void) ATTR_ALWAYS_INLINE;
 747:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void)
 748:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 749:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 750:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 751:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 752:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 753:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 754:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 755:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 756:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 757:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* External Variables: */
 758:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Global indicating the maximum packet size of the default control endpoint located at address
 759:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  0 in the device. This value is set to the value indicated in the device descriptor in the us
 760:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  project once the USB interface is initialized into device mode.
 761:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 762:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If space is an issue, it is possible to fix this to a static value by defining the control
 763:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint size in the FIXED_CONTROL_ENDPOINT_SIZE token passed to the compiler in the makefil
 764:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  via the -D switch. When a fixed control endpoint size is used, the size is no longer dynamic
 765:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  read from the descriptors at runtime and instead fixed to the given value. When used, it is
 766:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  important that the descriptor control endpoint size value matches the size given as the
 767:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  FIXED_CONTROL_ENDPOINT_SIZE token - it is recommended that the FIXED_CONTROL_ENDPOINT_SIZE t
 768:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  be used in the descriptors to ensure this.
 769:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 770:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This variable should be treated as read-only in the user application, and never manual
 771:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        changed in value.
 772:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 773:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 774:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				extern uint8_t USB_ControlEndpointSize;
 775:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 776:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define USB_ControlEndpointSize FIXED_CONTROL_ENDPOINT_SIZE
 777:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 778:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 779:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
 780:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
 781:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM     , StreamCallbackPtr_t Callback
 782:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 783:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM
 784:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 785:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 786:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 787:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and banking mode. Endpoints should be allocated in ascending order by their address in the
 788:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  device (i.e. endpoint 1 should be configured before endpoint 2 and so on) to prevent fragmen
 789:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  of the USB FIFO memory.
 790:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 791:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The endpoint type may be one of the EP_TYPE_* macros listed in LowLevel.h and the direction
 792:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  may be either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT_DIR_IN.
 793:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 794:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The bank size must indicate the maximum packet size that the endpoint can handle. Different
 795:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint numbers can handle different maximum packet sizes - refer to the chosen USB AVR's
 796:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  datasheet to determine the maximum bank size for each endpoint.
 797:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 798:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The banking mode may be either \ref ENDPOINT_BANK_SINGLE or \ref ENDPOINT_BANK_DOUBLE.
 799:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 800:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 801:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        it is automatically configured by the library internally.
 802:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 803:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 804:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine will select the specified endpoint, and the endpoint will remain selected
 805:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        once the routine completes regardless of if the endpoint configuration succeeds.
 806:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 807:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the configuration succeeded, false otherwise.
 808:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 809:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool Endpoint_ConfigureEndpoint(const uint8_t  Number,
 810:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Type,
 811:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Direction,
 812:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint16_t Size,
 813:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Banks);
 814:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 815:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Spin-loops until the currently selected non-control endpoint is ready for the next packet of
 816:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to be read or written to it.
 817:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 818:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be called on CONTROL type endpoints.
 819:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 820:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 821:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 822:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_WaitUntilReady_ErrorCodes_t enum.
 823:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 824:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_WaitUntilReady(void);
 825:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 826:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Completes the status stage of a control transfer on a CONTROL type endpoint automatically,
 827:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  with respect to the data direction. This is a convenience function which can be used to
 828:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  simplify user control request handling.
 829:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 830:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void Endpoint_ClearStatusStage(void);
 831:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 832:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads and discards the given number of bytes from the endpoint from the given buffer,
 833:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 834:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 835:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 836:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the next
 837:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  packet is ready, allowing for early aborts of stream transfers.
 838:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 839:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 840:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 841:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 842:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 843:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 844:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 845:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 846:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 847:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to send via the currently selected endpoint.
 848:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 849:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 850:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 851:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 852:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Discard_Stream(uint16_t Length
 853:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM);
 854:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 855:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in little endian,
 856:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 857:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 858:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 859:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 860:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 861:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 862:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 863:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 864:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 865:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 866:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 867:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 868:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 869:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 870:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 871:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 872:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 873:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 874:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 875:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 876:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_LE(const void* Buffer,
 877:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 878:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 879:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 880:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_LE().
 881:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 882:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 883:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 884:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 885:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 886:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 887:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 888:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 889:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 890:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_LE(const void* Buffer,
 891:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 892:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 893:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 894:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_LE().
 895:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 896:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 897:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 898:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 899:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 900:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 901:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 902:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 903:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 904:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 905:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 906:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_LE(const void* Buffer,
 907:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 908:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 909:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 910:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in big endian,
 911:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 912:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 913:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 914:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 915:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 916:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 917:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 918:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 919:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 920:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 921:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 922:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 923:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 924:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 925:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 926:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 927:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 928:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 929:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 930:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 931:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_BE(const void* Buffer,
 932:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 933:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 934:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 935:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_BE().
 936:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 937:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 938:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 939:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 940:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 941:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 942:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 943:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 944:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 945:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_BE(const void* Buffer,
 946:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 947:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 948:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 949:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_BE().
 950:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 951:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 952:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 953:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 954:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 955:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 956:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 957:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 958:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 959:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 960:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 961:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_BE(const void* Buffer,
 962:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 963:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 964:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 965:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in little endian,
 966:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 967:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 968:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 969:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
 970:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
 971:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 972:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 973:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 974:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 975:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 976:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 977:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 978:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 979:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 980:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
 981:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 982:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 983:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 984:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 985:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 986:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_LE(void* Buffer,
 987:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
 988:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 989:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 990:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_LE().
 991:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 992:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 993:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 994:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
 995:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 996:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 997:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 998:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 999:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1000:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_LE(void* Buffer,
1001:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1002:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1003:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1004:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in big endian,
1005:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
1006:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
1007:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
1008:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
1009:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
1010:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1011:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
1012:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
1013:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
1014:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1015:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
1016:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1017:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1018:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1019:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
1020:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1021:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1022:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1023:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1024:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1025:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_BE(void* Buffer,
1026:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
1027:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1028:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1029:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_BE().
1030:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1031:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1032:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1033:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
1034:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1035:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1036:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1037:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1038:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1039:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_BE(void* Buffer,
1040:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1041:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1042:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1043:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in littl
1044:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1045:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1046:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1047:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1048:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1049:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1050:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1051:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1052:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1053:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1054:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1055:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1056:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1057:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1058:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1059:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1060:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1061:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1062:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1063:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1064:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_LE(const void* Buffer,
1065:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1066:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1067:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of Endpoint_Write_Control_Stream_LE.
1068:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1069:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1070:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1071:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1072:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1073:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1074:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1075:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1076:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1077:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1078:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1079:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1080:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1081:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1082:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1083:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1084:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1085:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_LE(const void* Buffer,
1086:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1087:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1088:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_LE().
1089:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1090:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1091:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1092:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1093:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1094:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1095:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1096:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1097:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1098:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1099:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1100:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1101:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1102:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1103:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1104:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1105:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1106:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1107:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1108:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_LE(const void* Buffer,
1109:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1110:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1111:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in big e
1112:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1113:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1114:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1115:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1116:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1117:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1119:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1120:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1121:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1122:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1123:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1124:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1126:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1127:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1128:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1129:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1130:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1131:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_BE(const void* Buffer,
1133:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1134:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1135:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1136:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1137:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1138:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1139:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1141:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1142:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1145:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1146:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1147:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1148:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1150:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1152:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_BE(const void* Buffer,
1154:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1155:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1156:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1157:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1158:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1159:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1160:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1161:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1163:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1164:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1165:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1167:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1168:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1170:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1171:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1172:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1174:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1176:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_BE(const void* Buffer,
1177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1178:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in little en
1180:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1181:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1182:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1183:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1184:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1186:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1187:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1188:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1190:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1192:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1193:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1195:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1197:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1199:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_LE(void* Buffer,
1201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_LE().
1204:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1207:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1208:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1210:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1211:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1213:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1214:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1215:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1216:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1217:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1218:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1219:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1220:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1221:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_LE(void* Buffer,
1222:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1223:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1224:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in big endia
1225:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1226:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1227:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1228:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1229:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1230:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1231:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1232:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1233:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1234:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1235:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1236:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1237:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1238:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1239:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1240:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1241:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1242:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1243:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1244:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1245:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_BE(void* Buffer,
1246:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1247:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1248:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_BE().
1249:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1250:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1251:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1252:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1253:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1254:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1255:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1256:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1257:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1258:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1259:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1260:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1261:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1262:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1263:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1264:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1265:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1266:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_BE(void* Buffer,
1267:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1268:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1269:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Private Interface - For use in library only: */
1270:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	#if !defined(__DOXYGEN__)
1271:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
1272:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE(n)               _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## n)
1273:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE2(details)        _ENDPOINT_GET_MAXSIZE3(details)
1274:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE3(maxsize, db)    maxsize
1275:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1276:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK(n)            _ENDPOINT_GET_DOUBLEBANK2(ENDPOINT_DETAILS_EP ## 
1277:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK2(details)     _ENDPOINT_GET_DOUBLEBANK3(details)
1278:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK3(maxsize, db) db
1279:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1280:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
1281:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1282:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               256, true
1283:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  true
1284:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1285:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true
1286:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP5               64,  true
1287:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP6               64,  true
1288:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
1289:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1290:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               64,  false
1291:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  false
1292:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1293:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true			
1294:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
1295:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1296:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define Endpoint_ConfigureEndpoint(Number, Type, Direction, Size, Banks)                        
1297:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                     (__builtin_constant_p(Size) ? Endpoint_ConfigureEndpointStatic((Number),   
1298:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Type),     
1299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Direction),
1300:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    Size, Banks)
1301:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                   Endpoint_ConfigureEndpointDynamic((Number),  
1302:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Type),    
1303:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Direction)
1304:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     Size, Banks
1305:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1306:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
1307:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void    Endpoint_ClearEndpoints(void);
1308:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_BytesToEPSizeMaskDynamic(const uint16_t Size);
1309:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool    Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
1310:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG0XData,
1311:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG1XData);			
1312:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1313:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
1314:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
1315:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
1316:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1317:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
1318:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
1319:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1320:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
1321:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
1322:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
1323:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
1324:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				}
1325:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1326:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
1327:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1328:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1329:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointStatic(const uint8_t Number,
1330:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Type,
1331:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Direction,
1332:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint16_t Size,
1333:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Banks)
1334:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1335:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
1336:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
1337:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1338:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1339:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointDynamic(const uint8_t Number,
1340:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Type,
1341:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Direction,
1342:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint16_t Size,
1343:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Banks)
1344:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
1346:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 953               		.loc 2 1346 0 is_stmt 1 discriminator 3
 954 0030 C901      		movw r24,r18
 955 0032 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 956               	.LVL68:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 957               		.loc 2 1345 0 discriminator 3
 958 0036 412F      		mov r20,r17
 959 0038 482B      		or r20,r24
 960 003a 4260      		ori r20,lo8(2)
 961 003c 61E8      		ldi r22,lo8(-127)
 962 003e 802F      		mov r24,r16
 963 0040 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 964               	.LVL69:
 965               	.LBE98:
 966               	.LBE97:
 118:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
 967               		.loc 1 118 0 discriminator 3
 968 0044 8823      		tst r24
 969 0046 01F0      		breq .L59
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
 970               		.loc 1 125 0
 971 0048 2E81      		ldd r18,Y+6
 972 004a 3F81      		ldd r19,Y+7
 973 004c 8885      		ldd r24,Y+8
 974 004e 8823      		tst r24
 975 0050 01F0      		breq .L64
 976 0052 14E0      		ldi r17,lo8(4)
 977               	.LVL70:
 978 0054 00C0      		rjmp .L60
 979               	.LVL71:
 980               	.L64:
 981 0056 10E0      		ldi r17,0
 982               	.LVL72:
 983               	.L60:
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
 984               		.loc 1 125 0 is_stmt 0 discriminator 3
 985 0058 0D81      		ldd r16,Y+5
 986               	.LVL73:
 987               	.LBB99:
 988               	.LBB100:
 989               		.loc 2 1346 0 is_stmt 1 discriminator 3
 990 005a C901      		movw r24,r18
 991 005c 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 992               	.LVL74:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 993               		.loc 2 1345 0 discriminator 3
 994 0060 412F      		mov r20,r17
 995 0062 482B      		or r20,r24
 996 0064 4260      		ori r20,lo8(2)
 997 0066 60E8      		ldi r22,lo8(-128)
 998 0068 802F      		mov r24,r16
 999 006a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1000               	.LVL75:
 1001               	.LBE100:
 1002               	.LBE99:
 125:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
 1003               		.loc 1 125 0 discriminator 3
 1004 006e 8823      		tst r24
 1005 0070 01F0      		breq .L59
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber, EP_TYPE_IN
 1006               		.loc 1 132 0
 1007 0072 2A85      		ldd r18,Y+10
 1008 0074 3B85      		ldd r19,Y+11
 1009 0076 8C85      		ldd r24,Y+12
 1010 0078 8823      		tst r24
 1011 007a 01F0      		breq .L65
 1012 007c 14E0      		ldi r17,lo8(4)
 1013               	.LVL76:
 1014 007e 00C0      		rjmp .L62
 1015               	.LVL77:
 1016               	.L65:
 1017 0080 10E0      		ldi r17,0
 1018               	.LVL78:
 1019               	.L62:
 132:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_ConfigureEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber, EP_TYPE_IN
 1020               		.loc 1 132 0 is_stmt 0 discriminator 3
 1021 0082 C985      		ldd r28,Y+9
 1022               	.LVL79:
 1023               	.LBB101:
 1024               	.LBB102:
 1025               		.loc 2 1346 0 is_stmt 1 discriminator 3
 1026 0084 C901      		movw r24,r18
 1027 0086 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 1028               	.LVL80:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 1029               		.loc 2 1345 0 discriminator 3
 1030 008a 412F      		mov r20,r17
 1031 008c 482B      		or r20,r24
 1032 008e 4260      		ori r20,lo8(2)
 1033 0090 61EC      		ldi r22,lo8(-63)
 1034 0092 8C2F      		mov r24,r28
 1035               	/* epilogue start */
 1036               	.LBE102:
 1037               	.LBE101:
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1038               		.loc 1 140 0 discriminator 3
 1039 0094 DF91      		pop r29
 1040 0096 CF91      		pop r28
 1041               	.LVL81:
 1042 0098 1F91      		pop r17
 1043               	.LVL82:
 1044 009a 0F91      		pop r16
 1045               	.LVL83:
 1046               	.LBB104:
 1047               	.LBB103:
1345:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 1048               		.loc 2 1345 0 discriminator 3
 1049 009c 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 1050               	.LVL84:
 1051               	.L59:
 1052               	.LBE103:
 1053               	.LBE104:
 140:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1054               		.loc 1 140 0
 1055 00a0 80E0      		ldi r24,0
 1056               	/* epilogue start */
 1057 00a2 DF91      		pop r29
 1058 00a4 CF91      		pop r28
 1059               	.LVL85:
 1060 00a6 1F91      		pop r17
 1061 00a8 0F91      		pop r16
 1062 00aa 0895      		ret
 1063               		.cfi_endproc
 1064               	.LFE66:
 1066               		.section	.rodata
 1067               	.LC0:
 1068 0000 A1        		.byte	-95
 1069 0001 01        		.byte	1
 1070 0002 0000      		.word	0
 1071 0004 0000      		.word	0
 1072 0006 0000      		.word	0
 1073               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1074               	.global	RNDIS_Device_USBTask
 1076               	RNDIS_Device_USBTask:
 1077               	.LFB67:
 143:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 1078               		.loc 1 143 0
 1079               		.cfi_startproc
 1080               	.LVL86:
 1081 0000 8F92      		push r8
 1082               	.LCFI8:
 1083               		.cfi_def_cfa_offset 3
 1084               		.cfi_offset 8, -2
 1085 0002 9F92      		push r9
 1086               	.LCFI9:
 1087               		.cfi_def_cfa_offset 4
 1088               		.cfi_offset 9, -3
 1089 0004 AF92      		push r10
 1090               	.LCFI10:
 1091               		.cfi_def_cfa_offset 5
 1092               		.cfi_offset 10, -4
 1093 0006 BF92      		push r11
 1094               	.LCFI11:
 1095               		.cfi_def_cfa_offset 6
 1096               		.cfi_offset 11, -5
 1097 0008 EF92      		push r14
 1098               	.LCFI12:
 1099               		.cfi_def_cfa_offset 7
 1100               		.cfi_offset 14, -6
 1101 000a FF92      		push r15
 1102               	.LCFI13:
 1103               		.cfi_def_cfa_offset 8
 1104               		.cfi_offset 15, -7
 1105 000c 0F93      		push r16
 1106               	.LCFI14:
 1107               		.cfi_def_cfa_offset 9
 1108               		.cfi_offset 16, -8
 1109 000e 1F93      		push r17
 1110               	.LCFI15:
 1111               		.cfi_def_cfa_offset 10
 1112               		.cfi_offset 17, -9
 1113 0010 CF93      		push r28
 1114               	.LCFI16:
 1115               		.cfi_def_cfa_offset 11
 1116               		.cfi_offset 28, -10
 1117 0012 DF93      		push r29
 1118               	.LCFI17:
 1119               		.cfi_def_cfa_offset 12
 1120               		.cfi_offset 29, -11
 1121 0014 CDB7      		in r28,__SP_L__
 1122 0016 DEB7      		in r29,__SP_H__
 1123               	.LCFI18:
 1124               		.cfi_def_cfa_register 28
 1125 0018 AC97      		sbiw r28,44
 1126               	.LCFI19:
 1127               		.cfi_def_cfa_offset 56
 1128 001a 0FB6      		in __tmp_reg__,__SREG__
 1129 001c F894      		cli
 1130 001e DEBF      		out __SP_H__,r29
 1131 0020 0FBE      		out __SREG__,__tmp_reg__
 1132 0022 CDBF      		out __SP_L__,r28
 1133               	/* prologue: function */
 1134               	/* frame size = 44 */
 1135               	/* stack size = 54 */
 1136               	.L__stack_usage = 54
 1137 0024 8C01      		movw r16,r24
 144:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1138               		.loc 1 144 0
 1139 0026 8EB3      		in r24,0x1e
 1140               	.LVL87:
 1141 0028 8430      		cpi r24,lo8(4)
 1142 002a 01F0      		breq .+2
 1143 002c 00C0      		rjmp .L69
 1144               	.LVL88:
 149:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 1145               		.loc 1 149 0
 1146 002e F801      		movw r30,r16
 1147 0030 8185      		ldd r24,Z+9
 1148               	.LVL89:
 1149               	.LBB105:
 1150               	.LBB106:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1151               		.loc 2 299 0
 1152 0032 8093 E900 		sts 233,r24
 1153               	.LBE106:
 1154               	.LBE105:
 1155               	.LBB107:
 1156               	.LBB108:
 405:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI))  ? true : false);
 1157               		.loc 2 405 0
 1158 0036 8091 E800 		lds r24,232
 1159               	.LVL90:
 1160               	.LBE108:
 1161               	.LBE107:
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1162               		.loc 1 151 0
 1163 003a 80FF      		sbrs r24,0
 1164 003c 00C0      		rjmp .L72
 151:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1165               		.loc 1 151 0 is_stmt 0 discriminator 1
 1166 003e 7801      		movw r14,r16
 1167 0040 F5E9      		ldi r31,-107
 1168 0042 EF0E      		add r14,r31
 1169 0044 F11C      		adc r15,__zero_reg__
 1170 0046 F701      		movw r30,r14
 1171 0048 8081      		ld r24,Z
 1172 004a 8823      		tst r24
 1173 004c 01F0      		breq .L72
 1174               	.LBB109:
 153:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1175               		.loc 1 153 0 is_stmt 1
 1176 004e 88E0      		ldi r24,lo8(8)
 1177 0050 E0E0      		ldi r30,lo8(.LC0)
 1178 0052 F0E0      		ldi r31,hi8(.LC0)
 1179 0054 DE01      		movw r26,r28
 1180 0056 1196      		adiw r26,1
 1181               		0:
 1182 0058 0190      		ld r0,Z+
 1183 005a 0D92      		st X+,r0
 1184 005c 8A95      		dec r24
 1185 005e 01F4      		brne 0b
 162:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 1186               		.loc 1 162 0
 1187 0060 40E0      		ldi r20,0
 1188 0062 50E0      		ldi r21,0
 1189 0064 68E0      		ldi r22,lo8(8)
 1190 0066 70E0      		ldi r23,0
 1191 0068 CE01      		movw r24,r28
 1192 006a 0196      		adiw r24,1
 1193 006c 0E94 0000 		call Endpoint_Write_Stream_LE
 1194               	.LVL91:
 1195               	.LBB110:
 1196               	.LBB111:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1197               		.loc 2 454 0
 1198 0070 8091 E800 		lds r24,232
 1199 0074 8E77      		andi r24,lo8(126)
 1200 0076 8093 E800 		sts 232,r24
 1201               	.LBE111:
 1202               	.LBE110:
 166:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 1203               		.loc 1 166 0
 1204 007a F701      		movw r30,r14
 1205 007c 1082      		st Z,__zero_reg__
 1206               	.L72:
 1207               	.LBE109:
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 1208               		.loc 1 169 0
 1209 007e F801      		movw r30,r16
 1210 0080 EA56      		subi r30,106
 1211 0082 FF4F      		sbci r31,-1
 1212 0084 8081      		ld r24,Z
 1213 0086 8230      		cpi r24,lo8(2)
 1214 0088 01F0      		breq .+2
 1215 008a 00C0      		rjmp .L69
 169:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 1216               		.loc 1 169 0 is_stmt 0 discriminator 1
 1217 008c F801      		movw r30,r16
 1218 008e 818D      		ldd r24,Z+25
 1219 0090 928D      		ldd r25,Z+26
 1220 0092 A38D      		ldd r26,Z+27
 1221 0094 B48D      		ldd r27,Z+28
 1222 0096 892B      		or r24,r25
 1223 0098 8A2B      		or r24,r26
 1224 009a 8B2B      		or r24,r27
 1225 009c 01F0      		breq .+2
 1226 009e 00C0      		rjmp .L69
 1227               	.LBB112:
 173:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1228               		.loc 1 173 0 is_stmt 1
 1229 00a0 8581      		ldd r24,Z+5
 1230               	.LVL92:
 1231               	.LBB113:
 1232               	.LBB114:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1233               		.loc 2 299 0
 1234 00a2 8093 E900 		sts 233,r24
 1235               	.LBE114:
 1236               	.LBE113:
 1237               	.LBB115:
 1238               	.LBB116:
 417:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1239               		.loc 2 417 0
 1240 00a6 8091 E800 		lds r24,232
 1241               	.LVL93:
 1242               	.LBE116:
 1243               	.LBE115:
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 1244               		.loc 1 175 0
 1245 00aa 82FF      		sbrs r24,2
 1246 00ac 00C0      		rjmp .L74
 175:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 1247               		.loc 1 175 0 is_stmt 0 discriminator 1
 1248 00ae 7801      		movw r14,r16
 1249 00b0 F7E8      		ldi r31,-121
 1250 00b2 EF1A      		sub r14,r31
 1251 00b4 F9EF      		ldi r31,-7
 1252 00b6 FF0A      		sbc r15,r31
 1253 00b8 F701      		movw r30,r14
 1254 00ba 8081      		ld r24,Z
 1255 00bc 8111      		cpse r24,__zero_reg__
 1256 00be 00C0      		rjmp .L74
 177:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK);
 1257               		.loc 1 177 0 is_stmt 1
 1258 00c0 40E0      		ldi r20,0
 1259 00c2 50E0      		ldi r21,0
 1260 00c4 6CE2      		ldi r22,lo8(44)
 1261 00c6 70E0      		ldi r23,0
 1262 00c8 CE01      		movw r24,r28
 1263 00ca 0196      		adiw r24,1
 1264 00cc 0E94 0000 		call Endpoint_Read_Stream_LE
 1265               	.LVL94:
 179:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDISPacketHeader.DataLength > ETHERNET_FRAME_SIZE_MAX)
 1266               		.loc 1 179 0
 1267 00d0 6D85      		ldd r22,Y+13
 1268 00d2 7E85      		ldd r23,Y+14
 1269 00d4 8F85      		ldd r24,Y+15
 1270 00d6 9889      		ldd r25,Y+16
 1271 00d8 6D3D      		cpi r22,-35
 1272 00da F5E0      		ldi r31,5
 1273 00dc 7F07      		cpc r23,r31
 1274 00de 8105      		cpc r24,__zero_reg__
 1275 00e0 9105      		cpc r25,__zero_reg__
 1276 00e2 00F0      		brlo .L75
 1277               	.LBB117:
 1278               	.LBB118:
 489:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 1279               		.loc 2 489 0
 1280 00e4 8091 EB00 		lds r24,235
 1281 00e8 8062      		ori r24,lo8(32)
 1282 00ea 8093 EB00 		sts 235,r24
 1283 00ee 00C0      		rjmp .L69
 1284               	.L75:
 1285               	.LBE118:
 1286               	.LBE117:
 185:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(RNDISInterfaceInfo->State.FrameIN.FrameData, RNDISPacketHeader.DataLengt
 1287               		.loc 1 185 0
 1288 00f0 40E0      		ldi r20,0
 1289 00f2 50E0      		ldi r21,0
 1290 00f4 C801      		movw r24,r16
 1291 00f6 8556      		subi r24,101
 1292 00f8 9F4F      		sbci r25,-1
 1293 00fa 0E94 0000 		call Endpoint_Read_Stream_LE
 1294               	.LVL95:
 1295               	.LBB119:
 1296               	.LBB120:
 469:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1297               		.loc 2 469 0
 1298 00fe 8091 E800 		lds r24,232
 1299 0102 8B77      		andi r24,lo8(123)
 1300 0104 8093 E800 		sts 232,r24
 1301               	.LBE120:
 1302               	.LBE119:
 189:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameLength = RNDISPacketHeader.DataLength;
 1303               		.loc 1 189 0
 1304 0108 8D85      		ldd r24,Y+13
 1305 010a 9E85      		ldd r25,Y+14
 1306 010c F801      		movw r30,r16
 1307 010e E958      		subi r30,-119
 1308 0110 F94F      		sbci r31,-7
 1309 0112 9183      		std Z+1,r25
 1310 0114 8083      		st Z,r24
 191:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameInBuffer = true;
 1311               		.loc 1 191 0
 1312 0116 81E0      		ldi r24,lo8(1)
 1313 0118 F701      		movw r30,r14
 1314 011a 8083      		st Z,r24
 1315               	.L74:
 194:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 1316               		.loc 1 194 0
 1317 011c F801      		movw r30,r16
 1318 011e 8181      		ldd r24,Z+1
 1319               	.LVL96:
 1320               	.LBB121:
 1321               	.LBB122:
 299:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1322               		.loc 2 299 0
 1323 0120 8093 E900 		sts 233,r24
 1324               	.LBE122:
 1325               	.LBE121:
 1326               	.LBB123:
 1327               	.LBB124:
 405:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI))  ? true : false);
 1328               		.loc 2 405 0
 1329 0124 8091 E800 		lds r24,232
 1330               	.LVL97:
 1331               	.LBE124:
 1332               	.LBE123:
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 1333               		.loc 1 196 0
 1334 0128 80FF      		sbrs r24,0
 1335 012a 00C0      		rjmp .L69
 196:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 1336               		.loc 1 196 0 is_stmt 0 discriminator 1
 1337 012c 7801      		movw r14,r16
 1338 012e F8EA      		ldi r31,-88
 1339 0130 EF1A      		sub r14,r31
 1340 0132 F3EF      		ldi r31,-13
 1341 0134 FF0A      		sbc r15,r31
 1342 0136 F701      		movw r30,r14
 1343 0138 8081      		ld r24,Z
 1344 013a 8823      		tst r24
 1345 013c 01F4      		brne .+2
 1346 013e 00C0      		rjmp .L69
 198:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1347               		.loc 1 198 0 is_stmt 1
 1348 0140 CE01      		movw r24,r28
 1349 0142 0196      		adiw r24,1
 1350 0144 2CE2      		ldi r18,lo8(44)
 1351 0146 FC01      		movw r30,r24
 1352               		0:
 1353 0148 1192      		st Z+,__zero_reg__
 1354 014a 2A95      		dec r18
 1355 014c 01F4      		brne 0b
 200:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 1356               		.loc 1 200 0
 1357 014e 41E0      		ldi r20,lo8(1)
 1358 0150 50E0      		ldi r21,0
 1359 0152 60E0      		ldi r22,0
 1360 0154 70E0      		ldi r23,0
 1361 0156 4983      		std Y+1,r20
 1362 0158 5A83      		std Y+2,r21
 1363 015a 6B83      		std Y+3,r22
 1364 015c 7C83      		std Y+4,r23
 1365               	.LVL98:
 201:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + RNDISInterfaceInfo->State.Fr
 1366               		.loc 1 201 0
 1367 015e F801      		movw r30,r16
 1368 0160 EA5A      		subi r30,-86
 1369 0162 F34F      		sbci r31,-13
 1370 0164 4081      		ld r20,Z
 1371 0166 5181      		ldd r21,Z+1
 1372 0168 4A01      		movw r8,r20
 1373 016a FCE2      		ldi r31,44
 1374 016c 8F0E      		add r8,r31
 1375 016e 911C      		adc r9,__zero_reg__
 1376 0170 A12C      		mov r10,__zero_reg__
 1377 0172 B12C      		mov r11,__zero_reg__
 1378 0174 8D82      		std Y+5,r8
 1379 0176 9E82      		std Y+6,r9
 1380 0178 AF82      		std Y+7,r10
 1381 017a B886      		std Y+8,r11
 202:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 1382               		.loc 1 202 0
 1383 017c 24E2      		ldi r18,lo8(36)
 1384 017e 822E      		mov r8,r18
 1385 0180 912C      		mov r9,__zero_reg__
 1386 0182 A12C      		mov r10,__zero_reg__
 1387 0184 B12C      		mov r11,__zero_reg__
 1388 0186 8986      		std Y+9,r8
 1389 0188 9A86      		std Y+10,r9
 1390 018a AB86      		std Y+11,r10
 1391 018c BC86      		std Y+12,r11
 203:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataLength    = RNDISInterfaceInfo->State.FrameOUT.FrameLength;
 1392               		.loc 1 203 0
 1393 018e 60E0      		ldi r22,0
 1394 0190 70E0      		ldi r23,0
 1395 0192 4D87      		std Y+13,r20
 1396 0194 5E87      		std Y+14,r21
 1397 0196 6F87      		std Y+15,r22
 1398 0198 788B      		std Y+16,r23
 205:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK)
 1399               		.loc 1 205 0
 1400 019a 40E0      		ldi r20,0
 1401 019c 50E0      		ldi r21,0
 1402 019e 6CE2      		ldi r22,lo8(44)
 1403 01a0 70E0      		ldi r23,0
 1404 01a2 0E94 0000 		call Endpoint_Write_Stream_LE
 1405               	.LVL99:
 206:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(RNDISInterfaceInfo->State.FrameOUT.FrameData, RNDISPacketHeader.DataLen
 1406               		.loc 1 206 0
 1407 01a6 6D85      		ldd r22,Y+13
 1408 01a8 7E85      		ldd r23,Y+14
 1409 01aa 40E0      		ldi r20,0
 1410 01ac 50E0      		ldi r21,0
 1411 01ae C801      		movw r24,r16
 1412 01b0 8658      		subi r24,-122
 1413 01b2 994F      		sbci r25,-7
 1414 01b4 0E94 0000 		call Endpoint_Write_Stream_LE
 1415               	.LVL100:
 1416               	.LBB125:
 1417               	.LBB126:
 454:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1418               		.loc 2 454 0
 1419 01b8 8091 E800 		lds r24,232
 1420 01bc 8E77      		andi r24,lo8(126)
 1421 01be 8093 E800 		sts 232,r24
 1422               	.LBE126:
 1423               	.LBE125:
 209:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer = false;
 1424               		.loc 1 209 0
 1425 01c2 F701      		movw r30,r14
 1426 01c4 1082      		st Z,__zero_reg__
 1427               	.LVL101:
 1428               	.L69:
 1429               	/* epilogue start */
 1430               	.LBE112:
 212:../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.c **** }							
 1431               		.loc 1 212 0
 1432 01c6 AC96      		adiw r28,44
 1433 01c8 0FB6      		in __tmp_reg__,__SREG__
 1434 01ca F894      		cli
 1435 01cc DEBF      		out __SP_H__,r29
 1436 01ce 0FBE      		out __SREG__,__tmp_reg__
 1437 01d0 CDBF      		out __SP_L__,r28
 1438 01d2 DF91      		pop r29
 1439 01d4 CF91      		pop r28
 1440 01d6 1F91      		pop r17
 1441 01d8 0F91      		pop r16
 1442               	.LVL102:
 1443 01da FF90      		pop r15
 1444 01dc EF90      		pop r14
 1445 01de BF90      		pop r11
 1446 01e0 AF90      		pop r10
 1447 01e2 9F90      		pop r9
 1448 01e4 8F90      		pop r8
 1449 01e6 0895      		ret
 1450               		.cfi_endproc
 1451               	.LFE67:
 1453               		.section	.progmem.data,"a",@progbits
 1456               	AdapterSupportedOIDList:
 1457 0000 01        		.byte	1
 1458 0001 01        		.byte	1
 1459 0002 01        		.byte	1
 1460 0003 00        		.byte	0
 1461 0004 02        		.byte	2
 1462 0005 02        		.byte	2
 1463 0006 01        		.byte	1
 1464 0007 00        		.byte	0
 1465 0008 02        		.byte	2
 1466 0009 01        		.byte	1
 1467 000a 01        		.byte	1
 1468 000b 00        		.byte	0
 1469 000c 03        		.byte	3
 1470 000d 01        		.byte	1
 1471 000e 01        		.byte	1
 1472 000f 00        		.byte	0
 1473 0010 04        		.byte	4
 1474 0011 01        		.byte	1
 1475 0012 01        		.byte	1
 1476 0013 00        		.byte	0
 1477 0014 06        		.byte	6
 1478 0015 01        		.byte	1
 1479 0016 01        		.byte	1
 1480 0017 00        		.byte	0
 1481 0018 11        		.byte	17
 1482 0019 01        		.byte	1
 1483 001a 01        		.byte	1
 1484 001b 00        		.byte	0
 1485 001c 07        		.byte	7
 1486 001d 01        		.byte	1
 1487 001e 01        		.byte	1
 1488 001f 00        		.byte	0
 1489 0020 0A        		.byte	10
 1490 0021 01        		.byte	1
 1491 0022 01        		.byte	1
 1492 0023 00        		.byte	0
 1493 0024 0B        		.byte	11
 1494 0025 01        		.byte	1
 1495 0026 01        		.byte	1
 1496 0027 00        		.byte	0
 1497 0028 0C        		.byte	12
 1498 0029 01        		.byte	1
 1499 002a 01        		.byte	1
 1500 002b 00        		.byte	0
 1501 002c 0D        		.byte	13
 1502 002d 01        		.byte	1
 1503 002e 01        		.byte	1
 1504 002f 00        		.byte	0
 1505 0030 0E        		.byte	14
 1506 0031 01        		.byte	1
 1507 0032 01        		.byte	1
 1508 0033 00        		.byte	0
 1509 0034 11        		.byte	17
 1510 0035 01        		.byte	1
 1511 0036 01        		.byte	1
 1512 0037 00        		.byte	0
 1513 0038 14        		.byte	20
 1514 0039 01        		.byte	1
 1515 003a 01        		.byte	1
 1516 003b 00        		.byte	0
 1517 003c 01        		.byte	1
 1518 003d 01        		.byte	1
 1519 003e 02        		.byte	2
 1520 003f 00        		.byte	0
 1521 0040 02        		.byte	2
 1522 0041 01        		.byte	1
 1523 0042 02        		.byte	2
 1524 0043 00        		.byte	0
 1525 0044 03        		.byte	3
 1526 0045 01        		.byte	1
 1527 0046 02        		.byte	2
 1528 0047 00        		.byte	0
 1529 0048 04        		.byte	4
 1530 0049 01        		.byte	1
 1531 004a 02        		.byte	2
 1532 004b 00        		.byte	0
 1533 004c 05        		.byte	5
 1534 004d 01        		.byte	1
 1535 004e 02        		.byte	2
 1536 004f 00        		.byte	0
 1537 0050 01        		.byte	1
 1538 0051 01        		.byte	1
 1539 0052 01        		.byte	1
 1540 0053 01        		.byte	1
 1541 0054 02        		.byte	2
 1542 0055 01        		.byte	1
 1543 0056 01        		.byte	1
 1544 0057 01        		.byte	1
 1545 0058 03        		.byte	3
 1546 0059 01        		.byte	1
 1547 005a 01        		.byte	1
 1548 005b 01        		.byte	1
 1549 005c 04        		.byte	4
 1550 005d 01        		.byte	1
 1551 005e 01        		.byte	1
 1552 005f 01        		.byte	1
 1553 0060 01        		.byte	1
 1554 0061 01        		.byte	1
 1555 0062 02        		.byte	2
 1556 0063 01        		.byte	1
 1557 0064 02        		.byte	2
 1558 0065 01        		.byte	1
 1559 0066 02        		.byte	2
 1560 0067 01        		.byte	1
 1561 0068 03        		.byte	3
 1562 0069 01        		.byte	1
 1563 006a 02        		.byte	2
 1564 006b 01        		.byte	1
 1565               		.text
 1566               	.Letext0:
 1567               		.file 3 "/usr/lib/avr/include/stdint.h"
 1568               		.file 4 "/usr/lib/gcc/avr/4.8.2/include/stddef.h"
 1569               		.file 5 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/Strea
 1570               		.file 6 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/StdRe
 1571               		.file 7 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Device.h"
 1572               		.file 8 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../Common/RNDIS.h"
 1573               		.file 9 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/RNDIS.h"
 1574               		.file 10 "/usr/lib/avr/include/avr/pgmspace.h"
 1575               		.file 11 "../lufa-LUFA/LUFA/Drivers/USB/Class/Device/../../HighLevel/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 RNDIS.c
     /tmp/ccX7itjY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccX7itjY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccX7itjY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccX7itjY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccX7itjY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccX7itjY.s:13     .text.RNDIS_Device_ProcessControlRequest:0000000000000000 RNDIS_Device_ProcessControlRequest
     /tmp/ccX7itjY.s:1456   .progmem.data:0000000000000000 AdapterSupportedOIDList
     /tmp/ccX7itjY.s:898    .text.RNDIS_Device_ConfigureEndpoints:0000000000000000 RNDIS_Device_ConfigureEndpoints
     /tmp/ccX7itjY.s:1076   .text.RNDIS_Device_USBTask:0000000000000000 RNDIS_Device_USBTask

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_BytesToEPSizeMaskDynamic
Endpoint_ConfigureEndpoint_Prv
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
__do_copy_data
