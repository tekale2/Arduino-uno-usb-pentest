/* Arduino USB Keyboard HID demo
*
* 
*
*/

uint8_t buf[8] = { 0 };  /* Keyboard report buffer */

void setup();
void loop();

#define KEY_LEFT_CTRL 0x01
#define KEY_LEFT_SHIFT  0x02
#define KEY_RIGHT_CTRL  0x10
#define KEY_RIGHT_SHIFT 0x20
char *str1 = "u r windows";
char *str2 = "u r linux";
uint8_t keyA[8] = { 0, 0, 0, 0, 0, 0, 0 };
uint8_t ledStatus;
void setup() 
{
    Serial.begin(9600);
       ledStatus = 0;
    delay(2000);
       Serial.write(keyA, 8);
    delay(2000);
}

void loop() 
{
    char *chp = str2;
   uint8_t ledStatus;
    ledStatus = Serial.read();
if(ledStatus>0)
  chp = str1;
else
  chp = str2;
    delay(5000);
    while (*chp) {
      
  if ((*chp >= 'a') && (*chp <= 'z')) {
      buf[2] = *chp - 'a' + 4;
  } else if ((*chp >= 'A') && (*chp <= 'Z')) {
      buf[0] = KEY_LEFT_SHIFT;  /* Caps */
      buf[2] = *chp - 'A' + 4;
  } else {
      switch (*chp) {
      case ' ':
        buf[2] = 0x2c;  // Space
    break;
      default:
          /* Character not handled. To do: add rest of chars from HUT1_11.pdf */
    buf[2] = 0x37;  // Period
    break;
      }
  }

  Serial.write(buf, 8); // Send keypress
  buf[0] = 0;
  buf[2] = 0;
  Serial.write(buf, 8); // Release key
  chp++;
    }
}
